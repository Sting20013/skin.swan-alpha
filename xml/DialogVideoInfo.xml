<?xml version="1.0" encoding="UTF-8"?>
<window>
	<defaultcontrol always="true">8000</defaultcontrol>
	<!-- <onunload>ClearProperty(movieinformation,home)</onunload> -->
	<!-- 1.30 DialogVideoInfo.xml
ID 	Type 		Description
3 	image 		Video thumb
4 	textbox 	Text area for displaying the video plot
5 	button 		Toggle between video review and cast members (Deprecated)
6 	button 		Refresh video information
7 	button 		User rating
8 	button 		Play video
9 	button 		Resume video
10 	button 		Get video Fanart, Poster, Banner, or Thumb
11 	button 		Play movie trailer
13 	button 		Show all movies by the director of the selected movie
50 	container 	List of cast members of the currently selected movie  


get vis conditions - listitem.dbtype,set
embuary helper
Reset container positions

Resets all container positions to 0. Multiple ID's have to be splitted by ||.

if open for set - last item labels are uncleared - leia

Optional argument

    only=inactive (only reset position for not focused items)

RunScript(script.embuary.helper,action=resetposition,container=101||102||103||104||105||106,only=inactive)
-->
	<onload>RunScript(script.embuary.helper,action=encode,string='"$VAR[EncodeTitle]"',prop=EncodedTitle)</onload>
	<!-- dont call with included backslash, causing CUtil::SplitParams - ...  - end of string while searching for ) or  -->
	<onload condition="container.content(movies) | String.IsEqual(ListItem.DBTYPE,movie)">RunScript(script.embuary.helper,action=lookforfile,file='"$VAR[extrasLocation]"',prop=bonuscontentavail)</onload>
	<onload>ClearProperty(AdditionalInfo)</onload>
	<onunload>ClearProperty(EncodedTitle,home)</onunload>
	<onunload>ClearProperty(AdditionalInfo)</onunload>
	<onunload condition="!String.IsEmpty(Window(home).Property(bonuscontentavail))">ClearProperty(bonuscontentavail,home)</onunload>	
	
    <animation type="WindowOpen">
		<effect type="fade" start="0" end="100" time="300" tween="sine" easing="out" />
		<effect type="zoom" center="50%,50%" start="0" end="100" time="300" tween="cubic" easing="out" />
	</animation>
   
    <controls>
		
		<control type="group">
			<visible>!Window.IsActive(filebrowser)</visible>
			<visible>String.IsEmpty(Window(home).Property(movieinformation))</visible>
			<include content="Animation_TransitionFadeOut">
				<param name="condition" value="[Window.IsVisible(script-embuary-video.xml) | Window.IsVisible(script-embuary-person.xml) | Window.IsVisible(script-embuary-image.xml)]" />
			</include>
			
			<control type="group">
				<visible>String.IsEqual(Window.Property(AdditionalInfo),infolist) | [Player.HasVideo + ![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos) | VideoPlayer.Content(livetv)]]</visible>
				<animation effect="fade" start="0" end="100" time="450">VisibleChange</animation>
					
				<control type="image">
					<bottom>65</bottom>
					<right>100</right>
					<width>430</width>
					<height>150</height>
					<aspectratio aligny="top" align="right">keep</aspectratio>
					<include>studiologo_image</include>
				</control>
				<control type="label">
					<align>right</align>
					<right>20</right>
					<width>1920</width>
					<height>40</height>
					<bottom>10</bottom>
					<font>Reg18</font>
					<textcolor>midgrey</textcolor>
					<label>[B]$LOCALIZE[573]:[/B]    $INFO[ListItem.Folderpath]</label>
					<visible>!String.IsEmpty(ListItem.Folderpath)</visible>
				</control>
			</control>
			
			<!-- trailer window -->
			<control type="group">
				<visible>$EXP[TrailerIsPlaying]</visible>
				<animation effect="fade" start="0" end="100" time="750">VisibleChange</animation>
				<left>100</left>
				<top>260</top>
				<width>960</width>
				<height>540</height>
				<control type="image">
					<texture>colors/white.png</texture>
					<colordiffuse>ff000000</colordiffuse>
				</control>
				<control type="videowindow" />
			</control>
			
			<!-- Poster right BG -->
			<control type="group">
				<visible>!String.IsEqual(Window.Property(AdditionalInfo),infocontainer)</visible>
				<!-- <animation effect="fade" start="100" end="0" time="650" reversible="false" condition="String.IsEqual(Window.Property(AdditionalInfo),bigpicture)">Conditional</animation> -->
				<animation effect="fade" start="0" end="100" time="450">VisibleChange</animation>
				<width>440</width>
				<height>660</height>
				<right>100</right>
				<top>150</top>
				<!-- discart show in big view? -->
				<control type="image">
					<top>170</top>
					<left>10</left>
					<width>420</width>
					<height>420</height>
					<texture background="true" diffuse="diffuse/cdmask_new.png" fallback="defaultcovers/cd_big.png">$VAR[ListItemArt_Discart]</texture>
					<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
					<animation effect="slide" start="0" end="-410,0" tween="cubic" easing="inout" time="500" delay="100">VisibleChange</animation>
					<visible>String.IsEqual(Window.Property(AdditionalInfo),infolist)</visible>
				</control>
				
				<!-- fixed pos  Poster right -->
				<control type="image">
					<aspectratio align="right" aligny="top" scalediffuse="true">stretch</aspectratio>
					<texture background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png" border="5">$VAR[ImageLayout_poster]</texture>
				</control>
				<!-- fixed pos  Poster right OVERLAY, keep stretch, think about using square for music vid thumbs -->
				<control type="image">
					<visible>!String.IsEqual(ListItem.DBType,musicvideo)</visible>
					<aspectratio align="right" aligny="top" scalediffuse="true">stretch</aspectratio>
					<texture background="true" colordiffuse="grey" diffuse="diffuse/poster.png">overlay/poster/overlayposterfo.png</texture>
				</control>
				<!-- rating STARS option a -->
				<control type="image">
					<top>-40</top>
					<height>55</height>
					<aspectratio align="center" aligny="bottom">keep</aspectratio>
					<colordiffuse>blue</colordiffuse>
					<texture background="true">$VAR[rating_value_texture]</texture>
				</control>
			</control>
			
			<!-- Info if containers focused -->
			<!-- seperate  div line 1 -->
			<control type="group">
				<visible>String.IsEqual(Window.Property(AdditionalInfo),infocontainer)</visible>
				<animation effect="fade" start="0" end="100" time="450" reversible="false">VisibleChange</animation>
				<control type="image">
					<top>170</top>
					<width>1880</width>
					<height>1</height>
					<texture>colors/white.png</texture>
					<colordiffuse>grey</colordiffuse>
				</control>
				<!-- Dialog Header -->
				<control type="label">
					<height>25</height>
					<right>50</right>
					<top>110</top>
					<width>400</width>
					<font>Bold32</font>
					<textcolor>white</textcolor>
					<align>right</align>
					<label>$VAR[DialogInfo_Header]</label>
				</control>
			</control>
			
			<!-- INFO TOP -->
			
			<control type="group">
				<!-- <animation effect="fade" start="100" end="0" time="650" reversible="false" condition="String.IsEqual(Window.Property(AdditionalInfo),bigpicture)">Conditional</animation> -->
				
				<animation effect="slide" end="0,-120" time="600" reversible="false" condition="String.IsEqual(Window.Property(AdditionalInfo),infocontainer)">Conditional</animation>
				<animation effect="slide" start="0,-120" end="0,-0" time="600" reversible="false" condition="!String.IsEqual(Window.Property(AdditionalInfo),infocontainer)">Conditional</animation>
				
				<left>150</left>
				<top>140</top>
				<!-- clearlogo at top left-->
				<control type="image" id="887767">
					<width>495</width>
					<height>143</height>
					<fadetime>600</fadetime>
					<aspectratio align="left" aligny="bottom">keep</aspectratio>
					<texture background="true">$VAR[ListItemClearLogo]</texture>
				</control>
				<!-- Header (if no logo)-->
				<control type="label">
					<visible>String.IsEmpty(Control.GetLabel(887767))</visible>
					<top>50</top>
					<height>80</height>
					<wrapmultiline>true</wrapmultiline>
					<font>Netflix_Title</font>
					<align>left</align>
					<aligny>bottom</aligny>
					<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
					<label>$VAR[value_header]</label>
				</control>
			</control>
			
			<!-- info group left slide/fade/ -->
			<control type="grouplist">
				<animation effect="slide" end="0,-850" time="550" tween="cubic" reversible="true" condition="String.IsEqual(Window.Property(AdditionalInfo),infocontainer)">Conditional</animation>
				<animation effect="fade" start="100" end="0" time="650" reversible="false" condition="String.IsEqual(Window.Property(AdditionalInfo),infocontainer)">Conditional</animation>
				
				<animation effect="slide" end="0,950" time="550" tween="cubic" reversible="true" condition="String.IsEqual(Window.Property(AdditionalInfo),infolist)">Conditional</animation>
				<animation effect="fade" start="100" end="0" time="650" reversible="false" condition="String.IsEqual(Window.Property(AdditionalInfo),infolist)">Conditional</animation>
				
				<!-- <animation effect="fade" start="100" end="0" time="650" reversible="false" condition="String.IsEqual(Window.Property(AdditionalInfo),bigpicture)">Conditional</animation> -->
				<animation effect="fade" start="100" end="0" time="600" condition="Player.HasVideo + ![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos) | VideoPlayer.Content(livetv)]">conditional</animation>
				
				<width>1250</width>
				<height>1000</height>
				<orientation>vertical</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<itemgap>5</itemgap>
				<left>150</left>
				<top>300</top>
				<include>Animation_OpenClose_Zoom</include>
				
				<!-- SubHeader, Motto -->
				<control type="label">
					<visible>
						[!String.IsEmpty(ListItem.Season) + Container.Content(episodes)] |
						[!String.IsEmpty(ListItem.Season) + !String.IsEqual(ListItem.Title,ListItem.Label)] |
						!String.IsEmpty(ListItem.TagLine)
					</visible>
					<height>50</height>
					<label>$VAR[value_subheader]</label>
					<font>Netflix_Plot</font>
					<textcolor>orange</textcolor>
				</control>
				
				<!-- PLOT -->
				<control type="textbox">
					<width>800</width>
					<height>188</height>
					<label>$VAR[Plots]</label>
					<textcolor>white</textcolor>
					<align>left</align>
					<font>Netflix_Plot</font>
				</control>
				<!-- spacer -->
				<control type="label">
					<width>1</width>
					<height>20</height>
					<textcolor></textcolor>
					<align>left</align>
					<label></label>
				</control>
				
				<!-- horizontal groulist
				stars, year, mpaa , genre ?			-->
				<control type="grouplist">
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<left>0</left>
					<itemgap>15</itemgap>
					<height>90</height>
					
					<control type="image" id="7999">
						<visible>!String.IsEmpty(Control.GetLabel(7999)) + !String.IsEmpty(ListItem.Studio)</visible>
						<width>130</width>
						<height>90</height>
						<aspectratio aligny="center" align="left">keep</aspectratio>
						<fadetime>200</fadetime>
						<texture background="true">$VAR[image_StudioLogo]</texture>
						<colordiffuse>white</colordiffuse>
					</control>
					<control type="button" id="7998">
						<visible>String.IsEmpty(Control.GetLabel(7999)) + !String.IsEmpty(ListItem.Studio)</visible>
						<width max="200">auto</width>
						<height>90</height>
						<font>DialogListItem</font>
						<label>$INFO[ListItem.Studio]</label>
						<aligny>center</aligny>
						<align>center</align>
						<wrapmultiline>true</wrapmultiline>
						<textcolor>grey</textcolor>
						<disabledcolor>grey</disabledcolor>
						<texturenofocus colordiffuse="grey">frames/dialog16to9.png</texturenofocus>
						<textoffsetx>10</textoffsetx>
						<textoffsety>7</textoffsety>
						<enable>false</enable>
					</control>
					
					<!-- YEAR -->
					<control type="label">
						<width min="50">auto</width>
						<height>90</height>
						<left>10</left>
						<font>Netflix_Plot</font>
						<label>$VAR[premiere_date,[B],[/B]]</label>
						<textcolor>white</textcolor>
					</control>
					
					<!-- mpaa -->
					<control type="button">
						<top>25</top>
						<left>10</left>
						<width min="50">auto</width>
						<font>Netflix_Plot</font>
						<label>$INFO[ListItem.mpaa]</label>
						<align>center</align>
						<textcolor>white</textcolor>
						<disabledcolor>white</disabledcolor>
						<texturenofocus colordiffuse="white">frames/dialog16to9.png</texturenofocus>
						<height>40</height>
						<textoffsetx>10</textoffsetx>
						<textoffsety>-2</textoffsety>
						<enable>false</enable>
						<visible>!String.IsEmpty(ListItem.MPAA)</visible>
					</control>
					
					<!-- end time ,total episodes -->
					<control type="group">
						<top>20</top>
						<width>500</width>
						<control type="image">
							<width>50</width>
							<height>50</height>
							<colordiffuse>white</colordiffuse>
							<texture>dialogs/videoinfo/time-icon.png</texture>
						</control>
						<control type="label">
							<left>50</left>
							<height>50</height>
							<width>530</width>
							<font>Reg26</font>
							<align>left</align>
							<label>$VAR[ListItemDurationWithEndTime]</label>
							<textcolor>white</textcolor>
							<visible>String.IsEmpty(ListItem.Property(TotalEpisodes))</visible>
							<scroll>false</scroll>
						</control>
						<control type="label">
							<left>50</left>
							<height>50</height>
							<width>580</width>
							<font>Reg26</font>
							<align>left</align>
							<label>$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360]: ,  •  ]$INFO[ListItem.Property(unWatchedepisodes),$LOCALIZE[31092]: ,]</label>
							<textcolor>white</textcolor>
							<scroll>false</scroll>
							<visible>!String.IsEmpty(ListItem.Property(TotalEpisodes))</visible>
						</control>
					</control>
					
				</control>
					
				<!-- progress -->
				<control type="grouplist">
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<itemgap>40</itemgap>
					<height>50</height>
					<width>950</width>
					<visible>![Container.content(tvshows) | String.IsEqual(ListItem.DBTYPE,tvshow)]</visible>
						<control type="progress">
							<top>30</top>
							<width>600</width>
							<height>1</height>
							<align>left</align>
							<visible>Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
							<info>ListItem.PercentPlayed</info>
						</control>
						<!-- fake full progressbar for watched & not resumable 
						note use ViewNetfixHighlightTextColor or osd progress OSDProgressBarColor to get  better 'contrast' color, and dont leave it hardcoded -->
						<control type="image">
								<top>30</top>
								<width>600</width>
								<height>4</height>
								<align>left</align>
								<texture colordiffuse="red">colors/white.png</texture>
								<visible>[Integer.IsGreater(ListItem.PlayCount,0) + !ListItem.IsResumable]</visible>
							</control>
							<!-- fake full progressbar for watched & not resumable -->
							<control type="image">
								<top>30</top>
								<width>600</width>
								<height>4</height>
								<align>left</align>
								<texture colordiffuse="midgrey">colors/white.png</texture>
								<visible>[!Integer.IsGreater(ListItem.PlayCount,0) + !ListItem.IsResumable]</visible>
							</control>
							
							
							<control type="label">
								<top>0</top>
								<width>300</width>
								<font>Reg26</font>
								<align>left</align>
								<label>$VAR[PercentPlayed]</label>
								<textcolor>white</textcolor>
							</control>
							
						
				</control>
				<!-- special ratings -->
				<control type="grouplist">
					<visible>!String.IsEqual(Window.Property(AdditionalInfo))</visible>
					<animation effect="fade" start="100" end="0" time="450" reversible="false">VisibleChange</animation>
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>								
					<top>40</top>
					<width>1200</width>
					<itemgap>5</itemgap>
					<include>AltRatingMovieInfo</include>
				</control>
				
			</control>
			<!-- Media Flags -->
			<control type="group">
				<visible>String.IsEqual(Window.Property(AdditionalInfo),infolist) | [Player.HasVideo + ![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos) | VideoPlayer.Content(livetv)]]</visible>
				<animation effect="fade" start="0" end="100" time="450">VisibleChange</animation>
				<posx>160</posx>
				<posy>850</posy>
				<height>150</height>
				<include>mediaflags</include>
				<animation effect="zoom" alignx="true" end="75,75" time="0" condition="Skin.String(mediaflagsstyle,large) | Skin.String(mediaflagsstyle,large_color)">Conditional</animation>
			</control>
			
			<control type="grouplist" id="8000">
				<animation effect="fade" start="100" end="0" time="350" reversible="true" condition="String.IsEqual(Window.Property(AdditionalInfo),infocontainer)">Conditional</animation>
				<animation effect="slide" end="0,100" time="350" reversible="true" condition="String.IsEqual(Window.Property(AdditionalInfo),infolist) | [Player.HasVideo + ![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos) | VideoPlayer.Content(livetv)]]">Conditional</animation>
				<top>850</top>
				<left>150</left>
				<width>1150</width>
				<height>50</height>
				<itemgap>10</itemgap>
				
				<onup condition="[String.Contains(Window.Property(AdditionalInfo),infocontainer) | String.IsEmpty(Window.Property(AdditionalInfo))]">SetFocus(8006)</onup>
				
				<ondown>SetFocus(8005)</ondown>
				<onleft>8000</onleft>
				<onright>8000</onright>
				<pagecontrol>60</pagecontrol>
				<orientation>horizontal</orientation>
				<include condition="Skin.HasSetting(EnableTouchSupport)">back_button</include>
				<include condition="Skin.HasSetting(EnableTouchSupport)">home_button</include>
				
				<control type="button" id="8">
					<description>play native</description>
					<visible>!Skin.HasSetting(VideoInfo_Button_play)</visible>
					<include>Button_VideoInfo</include>
					<label>208</label>
				</control>
				
				<control type="button" id="9">
					<description>resume native</description>
					<visible>!Skin.HasSetting(VideoInfo_Button_play) + ListItem.IsResumable</visible>
					<include>Button_VideoInfo</include>
					<label>13404</label>
				</control>
				
				<control type="togglebutton" id="103">
					<description>Play Trailer</description>
					<visible>!Skin.HasSetting(VideoInfo_Button_Trailer) + [[!String.IsEmpty(Window(home).Property(trailer_avail)) | !String.IsEmpty(ListItem.Trailer)] | [String.IsEmpty(Window(home).Property(trailer_avail)) + String.IsEmpty(ListItem.Trailer) + Integer.IsGreater(Container(8605).NumItems,0)]]</visible>
					<include>Button_VideoInfo</include>
					<label>20410</label>
					<onclick condition="String.IsEmpty(Window(home).Property(trailer_avail)) + !String.IsEmpty(ListItem.Trailer)">PlayMedia($INFO[ListItem.Trailer],1)</onclick>
					<onclick condition="!String.IsEmpty(Window(home).Property(trailer_avail)) + String.IsEqual(ListItem.dbtype,tvshow)">PlayMedia($INFO[ListItem.Filenameandpath]$INFO[ListItem.TvShowTitle,,-trailer.mp4],1)</onclick>
					<onclick condition="!String.IsEmpty(Window(home).Property(trailer_avail)) + !String.IsEqual(ListItem.dbtype,tvshow)">PlayMedia($INFO[listitem.path]$INFO[ListItem.FolderName,,-trailer.mp4],1)</onclick>
					<onclick condition="Integer.IsGreater(Container(8605).NumItems,0) + String.IsEmpty(Window(home).Property(trailer_avail)) + String.IsEmpty(ListItem.Trailer)">PlayMedia($INFO[container(8605).ListItemAbsolute(0).Filenameandpath],1)</onclick>
					<onclick>SetProperty(TrailerIsPlaying,true,home)</onclick>
					<usealttexture>!String.IsEmpty(Window(Home).Property(TrailerIsPlaying))</usealttexture>
					<altlabel>244</altlabel>
					<altclick>FullScreen</altclick>
				</control>
				<control type="button" id="105">
					<description>Stop Trailer,Prop Cleared via Custom Window</description>
					<visible>!String.IsEmpty(Window(Home).Property(TrailerIsPlaying))</visible>
					<include>Button_VideoInfo</include>
					<label>36044</label>
					<onclick>Stop</onclick>
				</control>
				
				<control type="button" id="115">
					<description>Embuary TMDB Info, is Dialog, force close or hide VideoInfo?</description>
					<visible>!Skin.HasSetting(EmbuaryTMDBInfo) + System.HasAddon(script.embuary.info)</visible>
					<include>Button_VideoInfo</include>
					<label>Embuary TMDB Info</label>
					<!-- <onclick></onclick> 
					<onclick condition="Container.Content(tvshows) | Container.Content(movies)">RunScript(script.embuary.info,call=tv,query='"$INFO[ListItem.Title]"')</onclick>
					<onclick condition="Container.Content(seasons) | Container.Content(episodes)">RunScript(script.embuary.info,call=tv,query='"$INFO[ListItem.TvShowTitle]"')</onclick>
					-->
					<onclick condition="String.IsEmpty(ListItem.TvShowTitle)">RunScript(script.embuary.info,call=movie,query='"$INFO[ListItem.Label]"')</onclick>
					<onclick condition="!String.IsEmpty(ListItem.TvShowTitle)">RunScript(script.embuary.info,call=tv,query='"$INFO[ListItem.TvShowTitle]"')</onclick>
				</control>
				
				<control type="button" id="7">
					<description>native set user rating, use setprop to get cond layout for rating in dialogselect based or use cond based on header</description>
					<visible>!Skin.HasSetting(VideoInfo_Button_Rate) + Control.IsEnabled(7)</visible>
					<include>Button_VideoInfo</include>
					<label>Rate Title</label>
				</control>
				
				<control type="button" id="10">
					<description>native get Thumb</description>
					<visible>!Skin.HasSetting(VideoInfo_Button_KodiGetThumb)</visible>
					<include>Button_VideoInfo</include>
					<label>13511</label>
				</control>
				<control type="button" id="104">
					<description>ArtworkBeef get Thumb</description>
					<visible>[String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,musicvideo) | String.IsEqual(ListItem.DBType,episode)] + [system.hasaddon(script.artwork.beef) + !Skin.HasSetting(VideoInfo_Button_BeefGetThumb)]</visible>
					<include>Button_VideoInfo</include>
					<label>Artwork Beef</label>
					<onclick condition="String.IsEqual(ListItem.DBType,episode) + System.HasAddon(script.artwork.beef)">XBMC.RunScript(script.artwork.beef, mode=gui, mediatype=episode, dbid=$INFO[ListItem.DBID])</onclick>
					<onclick condition="String.IsEqual(ListItem.DBType,tvshow) + System.HasAddon(script.artwork.beef)">XBMC.RunScript(script.artwork.beef, mode=gui, mediatype=tvshow, dbid=$INFO[ListItem.DBID])</onclick>
					<onclick condition="String.IsEqual(ListItem.DBType,movie) + System.HasAddon(script.artwork.beef)">XBMC.RunScript(script.artwork.beef, mode=gui, mediatype=movie, dbid=$INFO[ListItem.DBID])</onclick>
				</control>
				<control type="button" id="6">
					<description>native refresh</description>
					<include>Button_VideoInfo</include>
					<label>184</label>
				</control>
			</control>
			
			<!-- arrow up	8006 -->
			<control type="group">
				<animation effect="fade" start="100" end="50" tween="sine" easing="inout" time="800" pulse="true" reversible="false" condition="true">Conditional</animation>
				<top>15</top>
				<left>830</left>
				<height>80</height>
					   
				<visible>!String.IsEqual(Window.Property(AdditionalInfo),infolist)</visible>
				<control type="button" id="8006">    
					<width>130</width>
					<height>40</height>
					<focusedcolor />
					<disabledcolor />
					<pulseonselect />
					<texturefocus flipy="true">info/arrowdown.png</texturefocus>
					<texturenofocus flipy="true">info/arrowdown.png</texturenofocus>
					<textoffsetx />
					
					<!-- Main Info goto Info List -->
					<onfocus condition="!String.Contains(Window.Property(AdditionalInfo),infocontainer)">SetProperty(AdditionalInfo, infolist)</onfocus>
					<onfocus condition="!String.Contains(Window.Property(AdditionalInfo),infocontainer)">SetFocus(8003)</onfocus>
						<!-- - Info List Focus 8000 -->
						<onfocus condition="!String.Contains(Window.Property(AdditionalInfo),infocontainer)">SetFocus(8000)</onfocus>
					
					<!-- Info Containers goto Main Info -->
					<onfocus condition="String.Contains(Window.Property(AdditionalInfo),infocontainer)">ClearProperty(AdditionalInfo)</onfocus>
					<onfocus condition="String.Contains(Window.Property(AdditionalInfo),infocontainer)">SetFocus(8000)</onfocus>
					
				</control>
				
			</control>
			
			<!-- arrow down	8005 -->
			<control type="group">
				<top>1015</top>
				<left>830</left>
				<height>80</height>
				<animation effect="fade" start="100" end="50" tween="sine" easing="inout" time="800" pulse="true" reversible="false" condition="true">Conditional</animation>
				<visible>!String.IsEqual(Window.Property(AdditionalInfo),infocontainer)</visible>
				<control type="button" id="8005">    
					<width>130</width>
					<height>40</height>
					<focusedcolor />
					<disabledcolor />
					<pulseonselect />
    			    <texturefocus>info/arrowdown.png</texturefocus>
					<texturenofocus>info/arrowdown.png</texturenofocus>
    			    <textoffsetx></textoffsetx>
					
					
					<!-- main page goto Itemcontainers -->
					<onfocus condition="!String.Contains(Window.Property(AdditionalInfo),infolist)">SetProperty(AdditionalInfo, infocontainer)</onfocus>
					<onfocus condition="!String.Contains(Window.Property(AdditionalInfo),infolist)">SetFocus(8001)</onfocus>
					
					
					<!-- Info List goto Main Info -->
					<onfocus condition="String.Contains(Window.Property(AdditionalInfo),infolist)">ClearProperty(AdditionalInfo)</onfocus>
					<onfocus condition="String.Contains(Window.Property(AdditionalInfo),infolist)">SetFocus(8000)</onfocus>
					
				</control>
			</control>
			
		<!-- ITEM CONTAINERS -->
			<control type="grouplist" id="8001">
				<animation effect="slide" end="0,-910" time="1000" tween="cubic" reversible="false" condition="String.IsEqual(Window.Property(AdditionalInfo),infocontainer)">conditional</animation>
				<animation effect="slide" start="0,-910" end="0,-0" time="800" tween="cubic" reversible="false" condition="!String.IsEqual(Window.Property(AdditionalInfo),infocontainer)">conditional</animation>
				<animation effect="fade" start="100" end="0" time="250" condition="Control.HasFocus(9003)">conditional</animation>
				
				<top>1085</top>
				<left>120</left>
				<height>895</height>
				<width>1730</width>
				<scrolltime tween="quadratic">400</scrolltime>
				<onup>SetFocus(8006)</onup>
				<ondown>8001</ondown>
				<onleft>8001</onleft>
				<orientation>vertical</orientation>
				<itemgap>-40</itemgap>
				<usecontrolcoords>true</usecontrolcoords>
				
				<control type="group" id="8400">
					<height>-20</height>
				</control>
				
				<!-- MovieSet -->
				<include content="Universal_ContainerHeader">
					<param name="groupid" value="8500" />
					<param name="id" value="8600" />
					<param name="label" value="$INFO[ListItem.Set,&quot; , &quot;]" />
					<visible>Control.IsVisible(8600)</visible>
				</include>
				<include content="Universal_Container">
					<param name="id" value="8600" />
					<param name="visible" value="!String.IsEmpty(ListItem.SetId) + [Integer.IsGreater(Container(8600).NumItems,0) | Container(8600).IsUpdating]" />
					<param name="type_height" value="370" />
					<param name="tags_visible" value="true" />
					<param name="layout_height" value="345" />
					<param name="layout_width" value="210" />
					<param name="itemwidth" value="207" />
					<param name="itemheight" value="310" />
					<param name="layout" value="poster" />
					<content sortby="year" target="videos">videodb://movies/sets/$INFO[ListItem.SetId]/?setid=$INFO[ListItem.SetId]</content>
				</include>
				<!-- next unwatched episode - System.GetBool(videolibrary.tvshowsselectfirstunwatcheditem,value=2)-->
				<!-- test no tags use info right beside thumb -->
				
				<include content="Universal_ContainerHeader">
					<param name="groupid" value="8510" />
					<param name="id" value="8610" />
					<param name="label" value="Nächste Episode" />
					<visible>Control.IsVisible(8610)</visible>
				</include>
				<include content="Universal_Container">
					<param name="id" value="8610" />
					<param name="visible" value="[Integer.IsGreater(ListItem.Property(UnwatchedEpisodes),0) + !String.IsEmpty(ListItem.DBID)] + Integer.IsGreater(Container(8610).NumItems,0) | Container(8610).IsUpdating" />
					<param name="type_height" value="370" />
					<param name="tags_visible" value="false" />
					<param name="layout_height" value="360" />
					<param name="layout_width" value="612" />
					<param name="itemheight" value="350" />
					<param name="itemwidth" value="595" />
					<param name="ls_overlay_visible" value="true" />
					<param name="layout" value="landscape" />
					<content limit="1" sortby="playcount" target="videos">videodb://inprogresstvshows/$INFO[ListItem.DBID]/-1/?tvshowid=$INFO[ListItem.DBID]</content>
				</include>
				<!-- CAST -->
				<include content="Universal_ContainerHeader">
					<param name="align" value="center" />
					<param name="groupid" value="8501" />
					<param name="id" value="8601" />
					<param name="label" value="$LOCALIZE[344] $INFO[ListItem.Title,  &quot; , &quot;]" />
					<visible>Control.IsVisible(8601)</visible>
				</include>
				<include content="Universal_Container">
					<param name="id" value="8601" />
					<param name="visible" value="Integer.IsGreater(Container(8601).NumItems,0) | Container(8601).IsUpdating" />
					<param name="type_height" value="370" />
					<param name="tags_visible" value="true" />
					<param name="layout_height" value="345" />
					<param name="layout_width" value="210" />
					<param name="itemwidth" value="207" />
					<param name="itemheight" value="310" />
					<param name="layout" value="poster" />
					
					<!-- <include>Action_CastMemberSearch</include> -->
					<include>Action_CastMemberSearchForceOption</include>
					
					<content>$VAR[EmbuaryCast]</content>
				</include>
				
				<!-- 
				ITEMS BY CAST ,including current video
					<content target="videos">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22actor%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22$INFO[Container(8601).ListItem.Label]%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</content>
					<content target="videos">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22actor%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22$INFO[Container(8601).ListItem.Label]%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</content>
				-->
				<include content="Universal_ContainerHeader">
					<param name="groupid" value="8502" />
					<param name="id" value="8602" />
					<param name="label" value="$LOCALIZE[342] &amp; $LOCALIZE[20343] $LOCALIZE[1441] [COLOR=$INFO[Skin.String(ViewDetailsHighlightTextColor)]]$INFO[Container(8601).ListItem.Label, &quot; , &quot;][/COLOR]" />
					<visible>Control.IsVisible(8602)</visible>
				</include>
				<include content="Universal_Container">
					<param name="id" value="8602" />
					<param name="visible" value="Integer.IsGreater(Container(8601).NumItems,0) | Container(8601).IsUpdating" />
					<param name="type_height" value="370" />
					<param name="tags_visible" value="true" />
					<param name="layout_height" value="345" />
					<param name="layout_width" value="210" />
					<param name="itemwidth" value="207" />
					<param name="itemheight" value="310" />
					<param name="layout" value="poster" />
					<content target="videos">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22actor%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22$INFO[Container(8601).ListItem.Label]%22%5D%7D%2C%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22isnot%22%2C%22value%22%3A%5B%22$INFO[Window(home).Property(EncodedTitle)]%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</content>
					<content target="videos">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22actor%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22$INFO[Container(8601).ListItem.Label]%22%5D%7D%2C%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22isnot%22%2C%22value%22%3A%5B%22$INFO[Window(home).Property(EncodedTitle)]%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</content>
				</include>
				
				<!-- MOVIE and TV SHOW By x1.04 Directors Named
				<value condition="Control.IsVisible(8601)">$INFO[ListItem.label,[B],[/B]][CR]$INFO[ListItem.label2]</value>-->
				
				<!-- xsp for shows support director, but missing listitem as info label 
				<content target="videos">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22director%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22$INFO[ListItem.Director]%22%5D%7D%2C%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22isnot%22%2C%22value%22%3A%5B%22$INFO[Window(home).Property(EncodedTitle)]%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</content> -->
				
				<include content="Universal_ContainerHeader">
					<param name="groupid" value="8503" />
					<param name="id" value="8603" />
					<param name="label" value="$LOCALIZE[342] $LOCALIZE[19159] $LOCALIZE[20339] [COLOR=$INFO[Skin.String(ViewDetailsHighlightTextColor)]]$INFO[ListItem.Director, &quot; , &quot;][/COLOR]" />
					<visible>!String.IsEmpty(ListItem.Director) + Control.IsVisible(8603)</visible>
				</include>
				<include content="Universal_Container">
					<param name="id" value="8603" />
					<param name="visible" value="!String.IsEmpty(ListItem.Director) + [Integer.IsGreater(Container(8603).NumItems,0) | Container(8603).IsUpdating]" />
					<param name="type_height" value="370" />
					<param name="tags_visible" value="true" />
					<param name="layout_height" value="345" />
					<param name="layout_width" value="210" />
					<param name="itemwidth" value="207" />
					<param name="itemheight" value="310" />
					<param name="layout" value="poster" />
					<content target="videos">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22director%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22$INFO[ListItem.Director]%22%5D%7D%2C%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22isnot%22%2C%22value%22%3A%5B%22$INFO[Window(home).Property(EncodedTitle)]%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</content>
				</include>
				
				<!-- similiar -->
				<include content="Universal_ContainerHeader">
					<param name="groupid" value="8504" />
					<param name="id" value="8604" />
					<param name="label" value="Similiar [COLOR=$INFO[Skin.String(ViewDetailsHighlightTextColor)]]$INFO[ListItem.Title,  &quot; , &quot;][/COLOR]" />
					<visible>Control.IsVisible(8604)</visible>
				</include>
				<include content="Universal_Container">
					<param name="id" value="8604" />
					<param name="visible" value="[!String.IsEmpty(ListItem.DBType) + !String.IsEmpty(ListItem.DBID)] + Integer.IsGreater(Container(8604).NumItems,0) | Container(8604).IsUpdating" />
					<param name="type_height" value="370" />
					<param name="tags_visible" value="true" />
					<param name="layout_height" value="345" />
					<param name="layout_width" value="210" />
					<param name="itemwidth" value="207" />
					<param name="itemheight" value="310" />
					<param name="layout" value="poster" />
					<content target="videos">plugin://script.embuary.helper/?info=getsimilar&amp;dbid=$INFO[ListItem.DBID]&amp;type=$INFO[ListItem.DBType]</content>
				</include>
				
				<!-- YOU TUBE -->
				<!-- <param name="visible" value="[Integer.IsGreater(Container(8605).NumItems,0) | Container(8605).IsUpdating]" /> -->
				<include content="Universal_ContainerHeader">
					<param name="groupid" value="8505" />
					<param name="id" value="8605" />
					<param name="label" value="$LOCALIZE[31797] [COLOR=$INFO[Skin.String(ViewDetailsHighlightTextColor)]]$VAR[Title,  &quot; , &quot;][/COLOR]" />
					<visible>Control.IsVisible(8605)</visible>
				</include>
				<!-- <include condition="!$EXP[IsOfflineMode]" content="Universal_Container"> -->
				<include condition="false" content="Universal_Container">
					<param name="id" value="8605" />
					<param name="visible" value="[Integer.IsGreater(Container(8605).NumItems,0) | Container(8605).IsUpdating]" />
					<param name="type_height" value="365" />
					<param name="tags_visible" value="true" />
					<param name="layout_height" value="355" />
					<param name="layout_width" value="490" />
					<param name="itemheight" value="280" />
					<param name="itemwidth" value="476" />
					<param name="ls_overlay_visible" value="true" />
					<param name="layout" value="landscape" />
					<content target="videos" sortby="file" limit="25">plugin://plugin.video.youtube/search/?q=$VAR[Title]</content>
				</include>
				
				<!-- stored extra fanart $LOCALIZE[20438]-->
				<include content="Universal_ContainerHeader">
					<param name="groupid" value="8506" />
					<param name="id" value="8606" />
					<param name="label" value="$LOCALIZE[20445]" />
					<visible>Control.IsVisible(8606)</visible>
				</include>
				<include content="Universal_Container">
					<param name="id" value="8606" />
					<param name="visible" value="Integer.IsGreater(Container(8606).NumItems,0) | Container(8606).IsUpdating" />
					<param name="type_height" value="370" />
					<param name="tags_visible" value="false" />
					<param name="layout_height" value="370" />
					<param name="layout_width" value="612" />
					<param name="itemheight" value="365" />
					<param name="itemwidth" value="620" />
					<param name="ls_overlay_visible" value="false" />
					<param name="layout" value="fanart" />
					<pagecontrol>90060</pagecontrol>
					<onclick condition="Skin.HasSetting(UseExtraFanartFolder)">SetFocus(9001)</onclick>
					<onclick condition="!Skin.HasSetting(UseExtraFanartFolder)">SetFocus(9003)</onclick>
					<include condition="!Skin.HasSetting(UseExtraFanartFolder) + [Container.Content(seasons) | Container.Content(episodes)]" content="ExtrafanartSource">
						<param name="prefix" value="tvshow." />
					</include>
					
					<include condition="!Skin.HasSetting(UseExtraFanartFolder) + ![Container.Content(seasons) | Container.Content(episodes)]" content="ExtrafanartSource" />
					
					<include condition="Skin.HasSetting(UseExtraFanartFolder)">ExtrafanartFolderPath</include>
				</include>
				
				<!-- stored extra thumbs -->
				<include content="Universal_ContainerHeader">
					<param name="groupid" value="8507" />
					<param name="id" value="8607" />
					<param name="label" value="EXTRA THUMBS" />
					<visible>Control.IsVisible(8607)</visible>
				</include>
				<include content="Universal_Container">
					<param name="id" value="8607" />
					<param name="visible" value="Skin.HasSetting(UseExtraFanartFolder) + Integer.IsGreater(Container(8607).NumItems,0) | Container(8607).IsUpdating" />
					<param name="type_height" value="370" />
					<param name="tags_visible" value="false" />
					<param name="layout_height" value="370" />
					<param name="layout_width" value="612" />
					<param name="itemheight" value="365" />
					<param name="itemwidth" value="620" />
					<param name="ls_overlay_visible" value="false" />
					<param name="layout" value="landscape" />
					<pagecontrol>90060</pagecontrol>
					<onclick>SetFocus(9002)</onclick>
					<content>$VAR[extraThumbsLocation]</content>
					
				</include>
				<!-- stored extras -->
				<include content="Universal_ContainerHeader">
					<param name="groupid" value="8509" />
					<param name="id" value="8609" />
					<param name="label" value="Bonusmaterial" />
					<visible>Control.IsVisible(8609)</visible>
				</include>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="8609" />
					<param name="tagbottom" value="false" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="150" />
					<param name="layout_width" value="450" />
					<param name="itemheight" value="140" />
					<param name="itemwidth" value="440" />
					<param name="banner_overlay_visible" value="true" />
					<param name="layout" value="banner" />
					<param name="visible" value="!String.IsEmpty(Window(home).Property(bonuscontentavail))" />
					<content>$VAR[extrasLocation]</content>
				</include>
			</control>
			
			<!-- 8003 INFOS TOP -->
			<control type="grouplist" id="8003">
				<animation effect="slide" end="0,1200" time="1000" tween="cubic" reversible="false" condition="String.IsEqual(Window.Property(AdditionalInfo),infolist)">conditional</animation>
				<animation effect="slide" start="0,1200" end="0,-0" time="800" tween="cubic" reversible="false" condition="!String.IsEqual(Window.Property(AdditionalInfo),infolist)">conditional</animation>
				<animation effect="fade" start="0" end="100" time="600" reversible="false" condition="String.IsEqual(Window.Property(AdditionalInfo),infolist)">conditional</animation>
				
				<animation effect="fade" start="100" end="0" time="600" condition="$EXP[TrailerIsPlaying]">conditional</animation>
				
				<top>-890</top>
				<centerleft>30%</centerleft>
				<width>1000</width>
				<height>550</height>
				<orientation>vertical</orientation>
				<itemgap>7</itemgap>
				<usecontrolcoords>true</usecontrolcoords>
				
				<!-- premiere date -->				
				<include content="VideoInfo_InfoList">
					<param name="Info" value="$LOCALIZE[20416]" />
                    <param name="InfoLabel" value="$INFO[ListItem.Premiered]" />
					<param name="icon" value="dialogs/videoinfo/premiered-icon.png" />
					<param name="visible" value="!String.IsEmpty(ListItem.premiered)" />
				</include>
				<!-- year -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="$LOCALIZE[345]" />
                    <param name="InfoLabel" value="$INFO[ListItem.Year]" />
					<param name="icon" value="dialogs/videoinfo/premiered-icon.png" />
					<param name="visible" value="String.IsEmpty(ListItem.Premiered) + !String.IsEmpty(ListItem.Year)" />
				</include>
				<!-- TotalEpisodes / Unwatched Episodes -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="$LOCALIZE[20360]" />
                    <param name="InfoLabel" value="$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360]: ,  •  ]$INFO[ListItem.Property(unWatchedepisodes),$LOCALIZE[31092]: ,]" />
					<param name="icon" value="dialogs/videoinfo/time-icon.png" />
					<param name="visible" value="!String.IsEmpty(ListItem.Property(TotalEpisodes))" />
				</include>
				<!-- genre -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="$LOCALIZE[515]" />
                    <param name="InfoLabel" value="$INFO[ListItem.Genre]" />
					<param name="icon" value="dialogs/videoinfo/genre-icon.png" />
					<param name="visible" value="!String.IsEmpty(ListItem.Genre)" />
				</include>
				<!-- status -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="$LOCALIZE[515]" />
                    <param name="InfoLabel" value="$INFO[ListItem.Status]" />
					<param name="icon" value="dialogs/videoinfo/genre-icon.png" />
					<param name="visible" value="!String.IsEmpty(ListItem.Status)" />
				</include>
				
				<!-- sh next aired -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="$LOCALIZE[31212] $LOCALIZE[31213]" />
                    <param name="InfoLabel" value="$INFO[Window(Home).Property(SkinHelper.ListItem.airdaytime.label)]" />
					<param name="icon" value="dialogs/videoinfo/genre-icon.png" />
					<param name="visible" value="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.airdaytime.label))" />
				</include>
				 
				<!-- rating and votes simple  &amp; $LOCALIZE[205] -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="$LOCALIZE[563]" />
                    <param name="InfoLabel" value="$INFO[ListItem.RatingAndVotes]" />
					<param name="icon" value="flags/rating.png" />
					<param name="visible" value="!String.IsEmpty(ListItem.RatingAndVotes)" />
				</include>
				
				<!-- Director -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="$LOCALIZE[20339]" />
                    <param name="InfoLabel" value="$INFO[ListItem.Director]" />
					<param name="icon" value="dialogs/videoinfo/director-icon.png" />
					<param name="visible" value="!String.IsEmpty(ListItem.Director)" />
				</include>
				<!-- Writer -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="$LOCALIZE[20417]" />
                    <param name="InfoLabel" value="$INFO[ListItem.Writer]" />
					<param name="icon" value="dialogs/videoinfo/writer-icon.png" />
					<param name="visible" value="!String.IsEmpty(ListItem.Writer)" />
				</include>
				<!-- Studio -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="$LOCALIZE[29909]" />
                    <param name="InfoLabel" value="$INFO[ListItem.Studio]" />
					<param name="icon" value="dialogs/videoinfo/tvstudio-icon.png" />
					<param name="visible" value="!String.IsEmpty(ListItem.Studio)" />
				</include>
				<!-- mpaa -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="MPAA" />
                    <param name="InfoLabel" value="$INFO[ListItem.MPAA]" />
					<param name="icon" value="flags/mpaa.png" />
					<param name="visible" value="!String.IsEmpty(ListItem.MPAA)" />
				</include>
				<!-- Country -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="$LOCALIZE[574]" />
                    <param name="InfoLabel" value="$INFO[ListItem.Country]" />
					<param name="icon" value="dialogs/videoinfo/location.png" />
					<param name="visible" value="!String.IsEmpty(ListItem.Country)" />
				</include>
				<!-- set -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="$LOCALIZE[36910]" />
                    <param name="InfoLabel" value="$INFO[ListItem.Set]" />
					<param name="icon" value="flags/discsets/diskmain_w.png" />
					<param name="visible" value="!String.IsEmpty(ListItem.SetID)" />
				</include>
				<!-- sh -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="Einnahmen" />
                    <param name="InfoLabel" value="$INFO[Window(Home).Property(SkinHelper.ListItem.Revenue.formatted),, $]" />
					<param name="icon" value="dialogs/videoinfo/dollar.png" />
					<param name="visible" value="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Revenue.formatted))" />
				</include> 
				<!-- sh -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="Budget" />
                    <param name="InfoLabel" value="$INFO[Window(Home).Property(SkinHelper.ListItem.Budget.formatted),, $]" />
					<param name="icon" value="dialogs/videoinfo/dollar.png" />
					<param name="visible" value="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Budget.formatted))" />
				</include>
				<!-- sh -->				
				<include content="VideoInfo_InfoList">
					<param name="Info" value="BoxOffice" />
                    <param name="InfoLabel" value="$INFO[Window(Home).Property(SkinHelper.ListItem.BoxOffice.formatted),, $]" />
					<param name="icon" value="dialogs/videoinfo/dollar.png" />
					<param name="visible" value="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.BoxOffice.formatted))" />
				</include>
				<!-- audio stream -->			
				<include content="VideoInfo_InfoList_AV_Flags">
					<param name="Info" value="$LOCALIZE[21447]" />
					<param name="InfoLabelProperty" value="AudioLanguage" />
					<param name="icon" value="flags/audio.png" />
					<param name="visible" value="!String.IsEmpty(ListItem.AudioLanguage) | !String.IsEmpty(ListItem.Property(AudioLanguage.1))" />
                </include>
				<!-- sub flags -->
				<include content="VideoInfo_InfoList_AV_Flags">
					<param name="Info" value="$LOCALIZE[21448]" />
					<param name="InfoLabelProperty" value="SubtitleLanguage" />
					<param name="icon" value="flags/subtitles.png" />
					<param name="visible" value="!String.IsEmpty(ListItem.SubtitleLanguage) | !String.IsEmpty(ListItem.Property(SubtitleLanguage.1))" />
                </include>
				<!-- sh  awards -->
				<include content="VideoInfo_InfoList">
					<param name="Info" value="Awards" />
                    <param name="InfoLabel" value="$INFO[Window(Home).Property(SkinHelper.ListItem.Awards)]" />
					<param name="icon" value="flags/flags_color/addratings/oscarbw.png" />
					<param name="visible" value="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Awards))" />
                </include>
			</control>
			
			<!-- workaroung, slideshow nav fanart-->
			<include content="VideoInfo_SlideshowNav">
				<param name="ButtonID" value="9001" />
				<param name="ContainerID" value="8606" />
			</include>
			<include content="VideoInfo_SlideshowNav">
				<param name="ButtonID" value="9002" />
				<param name="ContainerID" value="8607" />
			</include>
			<include content="VideoInfo_SlideshowNav">
				<param name="ButtonID" value="9003" />
				<param name="ContainerID" value="8606" />
				<param name="origin" value="Art(thumb)" />
			</include>
			
			<!-- slideshow scrollbar -->
			<control type="scrollbar" id="90060">
				<width>1920</width>
				<centerleft>50%</centerleft>
				<height>8</height>
				<orientation>horizontal</orientation>
				<bottom>0</bottom>
				<visible>Control.HasFocus(9001) | Control.HasFocus(9002) | Control.HasFocus(9003)</visible>
				<texturesliderbackground colordiffuse="$VAR[scrollbar_panel]">colors/white.png</texturesliderbackground>
				<texturesliderbar colordiffuse="$VAR[scrollbar_slider_fo]">colors/white.png</texturesliderbar>
				<textureslidernib />
			</control>
		</control>
	</controls>
</window>
