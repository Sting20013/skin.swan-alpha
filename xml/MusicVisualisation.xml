<?xml version="1.0" encoding="utf-8"?>
<window>
	<defaultcontrol />
	<onload>ActivateWindow(musicosd)</onload>
	<!-- 
	<onload> prop show bars</onload>
	<onload> prop show osd</onload>
	 -->
<!-- 	

16.1.36 MusicOSD.xml
ID	Type	Description
500	button	Select visualization
501	button	Lock visualization to the current preset

16.1.37 MusicVisualisation.xml
ID	Type	Description
2	visualisation	Background Visualization


bool s

MusicPlayer.HasNext	Returns true if the music player has a next song queued in the Playlist.	
MusicPlayer.HasPrevious	Returns true if the music player has a a Previous Song in the Playlist .	
MusicPlayer.Offset(number).Exists	Returns true if the music players playlist has a song queued in position (number).	
MusicPlayer.Content(parameter)	Returns true if the current audio you are playing matches the specified content. The following values are accepted: files, livetv	
MusicPartyMode.Enabled	Returns true if Party Mode is enabled

Visualisation.Enabled	Returns true if any visualisation has been set in settings (so not None).	
Visualisation.HasPresets	Returns true if the visualisation has built in presets.	
Visualisation.Locked	Returns true if the current visualisation preset is locked (eg in Milkdrop.)
-->

	<controls>
	
	<control type="visualisation" id="2">
		<visible>Visualisation.Enabled</visible>
	</control>
	
	<control type="group">
		<animation effect="fade" start="100" end="40" time="325" condition="Visualisation.Enabled">conditional</animation>
		<include>PlayerBackground</include>
	</control>
		
	<!-- Layout 1 -->
	
	<control type="group">
		<visible>!skin.hassetting(testlayout)</visible>
			<bottom>0</bottom>
			<width>100%</width>
			<height>600</height>
			<control type="image">
				<left>310</left>
				<bottom>5</bottom>
				<height>320</height>
				<width>320</width>
				<aspectratio scalediffuse="true" align="center" aligny="bottom">keep</aspectratio>
				<texture diffuse="diffuse/cdmask_new.png">$VAR[PlayerDisc]</texture>
				<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
				<animation effect="slide" start="-320,0" end="0,0" time="300" reversible="false">WindowOpen</animation>
			</control>
			<control type="image">
				<description>optional diffuse texture as some art will not fit</description>
				<left>0</left>
				<bottom>0</bottom>
				<height>450</height>
				<width>340</width>
				<texture diffuse="diffuse/music_cover_cd.png">$VAR[PlayerThumb]</texture>
				<aspectratio scalediffuse="true" align="left" aligny="bottom">keep</aspectratio>
			</control>
	</control>

	<!-- Layout 2 -->
	<control type="group">
		<visible>skin.hassetting(testlayout)</visible>
				
		<control type="group">
			<left>0</left>

			<height>100%</height>
			<width>35%</width>
			
			<control type="image">
				<left>-2</left> delete if have right border img
				<!--make 70% black image or optianal border colors?-->
				<bordersize>0,0,2,0</bordersize>
				<bordertexture border="2" colordiffuse="$VAR[MusicPlayerTextAccent]">frames/frametest.png</bordertexture> 
				<texture colordiffuse="$VAR[MusicPlayerBorder_CDiffuse]">colors/white70.png</texture>
			</control>
				
			<control type="image">
				<!-- <left>300</left>
				<centertop>26%</centertop>
				<width>360</width>
				<height>360</height>
				 -->
				<visible>Skin.HasSetting(MusicPlayer_PreferDisc)</visible>
				<left>60</left>
				<centertop>25%</centertop>
				<height>400</height>
				<width>400</width>
				<bordersize>2</bordersize>
				<bordertexture /> 
				<aspectratio scalediffuse="true" align="center" aligny="bottom">keep</aspectratio>
				<texture diffuse="diffuse/cdmask_new.png">$VAR[PlayerDisc]</texture>
				<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
				<animation effect="slide" start="-320,0" end="0,0" time="300" reversible="false">WindowOpen</animation>
			</control>
			
			<control type="image">
				<visible>[Skin.HasSetting(MusicPlayer_PreferDisc) + String.IsEmpty(Player.Art(discart) + String.IsEmpty(Player.Art(album.discart)] | !Skin.HasSetting(MusicPlayer_PreferDisc)</visible>
				
				<description>optional diffuse texture as some art will not fit</description>
				<left>60</left>
				<centertop>25%</centertop>
				<height>400</height>
				<width>400</width>
				<bordersize>3</bordersize>
				<bordertexture border="2" colordiffuse="$VAR[MusicPlayerTextMainFO]">frames/frametest.png</bordertexture> 
				<texture>$VAR[PlayerThumb]</texture>
				<aspectratio scalediffuse="false" align="left" aligny="bottom">keep</aspectratio>
			</control>
			
			
			<control type="grouplist">
				<top>45%</top>
				<left>60</left>
				<right>50</right>
				<height>50%</height>
				
				<orientation>vertical</orientation>
				<itemgap>10</itemgap>
				<usecontrolcoords>true</usecontrolcoords>
		
				<control type="label">
					<wrapmultiline>true</wrapmultiline>
					<height>200</height>
					<width>100%</width>
					<aligny>bottom</aligny>
					<align>left</align>
					<textcolor>$VAR[MusicPlayerTextMainFO]</textcolor>
					<font>font_robotobold</font>
					<label>$INFO[MusicPlayer.Album,[B],[/B]][CR][COLOR=$VAR[MusicPlayerTextMainNF]]by[/COLOR][CR]$INFO[MusicPlayer.Artist,[B],[/B]]</label>
				</control>
				<control type="label">
					<height>20</height>
					<label />
				</control>
				<control type="label">
					<wrapmultiline>true</wrapmultiline>
					<height>25</height>
					<align>left</align>
					<aligny>bottom</aligny>
					<textcolor>$VAR[MusicPlayerTextMainFO]</textcolor>
					<font>font_notification</font>
					<label>$INFO[MusicPlayer.PlaylistPosition,[B],[/B]  -  ]$INFO[Player.Title,[B],[/B]]</label>
					
				</control>
			
				<!-- ( $INFO[MusicPlayer.PlaylistPosition]/$INFO[MusicPlayer.PlaylistLength] )-->
				<control type="label">
					<wrapmultiline>true</wrapmultiline>
					<visible>false</visible>
					<height>50</height>
					<width>auto</width>
					<align>left</align>
					<textcolor>$VAR[MusicPlayerTextMainFO]</textcolor>
					<font>font_notification</font>
					<label>$INFO[MusicPlayer.Album,[B],[/B]]$INFO[MusicPlayer.Year,[CR](,)]</label>
					
				</control>
		
				
				
			</control>
				
			<control type="label">
				<bottom>20</bottom>
				<left>60</left>
				<height>100</height>
				<align>left</align>
				<textcolor>$VAR[MusicPlayerTextMainFO]</textcolor>
				<font>debugtiny2</font>
				<label>$VAR[MusicPlayerOffset]</label>
			</control>
				
					
		</control>
				
				
		<control type="group">
			<description>group cond slide use alarm set prop or on nav actions</description>
			<visible>true</visible>
				<right>0</right>
				<height>100%</height>
				<width>20%</width>
				
				<control type="image">
					<right>-2</right>
					<bordersize>1,0,0,0</bordersize>
					<bordertexture border="2" colordiffuse="$VAR[MusicPlayerTextAccent]">frames/frametest.png</bordertexture> 
					<texture colordiffuse="$VAR[MusicPlayerBorder_CDiffuse]">colors/white70.png</texture>
				</control>
				
				<control type="grouplist">
					<top>100</top>
					<right>50</right>
					<left>50</left>
					<bottom>100</bottom>
					<aligny>center</aligny>
					<align>top</align>
					<orientation>vertical</orientation>
					<itemgap>20</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
				
					<control type="image">
						<centerright>50%</centerright>
						<width>150</width>
						<height>150</height>
						<texture background="true" diffuse="artworkdiffuse/circle.png">$INFO[Player.Art(artist.thumb)]</texture>
						<bordertexture colordiffuse="$VAR[Nav_LabelPrimaryColor]">artworkdiffuse/circleborder.png</bordertexture>
						<aspectratio scalediffuse="false" aligny="center" align="center">scale</aspectratio>
						<bordersize>2</bordersize>
					</control>
					<control type="textbox">
						<wrapmultiline>true</wrapmultiline>
						<height>auto</height>
						<align>center</align>
						<textcolor>$VAR[MusicPlayerTextMainFO]</textcolor>
						<font>HeaderLarge</font>
						<label>$INFO[MusicPlayer.Artist,[B],[/B]]</label>
					</control>
					<control type="label">
						<visible>!String.IsEmpty(MusicPlayer.Property(Artist_YearsActive)) | [!String.IsEmpty(MusicPlayer.Property(Artist_Formed)) | !String.IsEmpty(MusicPlayer.Property(Artist_Disbanded))]</visible>
						<height>25</height>
						<align>center</align>
						<textcolor>$VAR[MusicPlayerTextAccent]</textcolor>
						<font>CommonTag</font>
						<label>$VAR[MusicPlayerArtistSubInfo]</label>
					</control>
					<control type="textbox">
						<wrapmultiline>true</wrapmultiline>
						<autoscroll delay="3000" time="1200" repeat="10000">true</autoscroll>
						<height>700</height>
						<align>justify</align>
						<aligny>bottom</aligny>
						<textcolor>$VAR[MusicPlayerTextMainFO]</textcolor>
						<font>CommonTag</font>
						<label>$VAR[MusicPlayer_Plot]</label>
					</control>
				</control>
		</control>
				
				
		<control type="button">
			<description>touchctrl reload</description>
			<visible>false</visible>
			<top>100</top>
			<right>25%</right>
			<height>100</height>
			<width>400</width>
			<label>$INFO[System.CurrentWindow]</label>
			<onclick>ReloadSkin()</onclick>
		</control>
		
		<control type="progress">
			<description>slider bg</description>
			<left>60</left>
			<bottom>25%</bottom>
			<height>2</height>
			<width>28%</width>
			<texturebg colordiffuse="black">colors/white.png</texturebg>
			<midtexture colordiffuse="$VAR[MusicPlayerTextAccent]">colors/white.png</midtexture>
			<lefttexture />
			<righttexture />
			<overlaytexture />
			<info>Player.Progress</info>
		</control>
				
		<control type="group">
			<visible>!window.isactive(musicosd.xml)</visible>
			<!-- <visible>false</visible> -->
			<left>0</left>

			<height>100%</height>
			<width>35%</width>
			
			
			
		
		</control>
			
			
	</control>
	
	
	<include content="swan_debug_overlay" />
	
	</controls>
</window>


	