<?xml version="1.0" encoding="UTF-8"?>
<window>
<!-- 	1.48 MyVideoNav.xml
ID 	Type 				Description
2 	button 				Select viewtype (list, thumbnail, media info, etc...)
3 	button 				Select sort method (sort by: name, date size, etc...)
4 	togglebutton 		Select sortmode (ascending or descending)
5 	button 				Switch to file mode
6 	button 				Play DVD (used the play physical DVD discs)
8 	button 				Search for a string anywhere in the Kodi video database
10 	button 				Show only watched, unwatched or all videos
12 	label 				Number of items in the list
14 	button 				Show only unwatched or all videos
11 	button 				Unlock shares
15 	label 				Filter label
16 	button 				Start party mode (randomly play musicvideos from your collection)
18 	label 				Warning to the user to turn off library mode when no scanned media is found
19 	radiobutton / edit 	Filter the media files to only show items that include the specified string in the name
20 	button 				Update library  

<animation effect="fade" start="100" end="0" time="200" tween="sine" condition="$EXP[Infodialog_IsActive]">Conditional</animation>

-->
	<defaultcontrol always="true">50</defaultcontrol>
	<backgroundcolor>$VAR[BackgroundColor]</backgroundcolor>
	<views>50,51,52,53,58</views>
	<menucontrol>9000</menucontrol>
	<controls>
		<control type="list" id="2000">
			<include>HiddenContainer</include>
			<content limit="1">$VAR[EmbuaryHelper_GetInfo_dbid]</content>
		</control>
		<control type="list" id="2001">
			<include>HiddenContainer</include>
			<content sortby="year">$INFO[ListItem.FolderPath]</content>
			<visible>String.IsEqual(ListItem.DBtype,set)</visible>
		</control>
		<control type="list" id="2002">
			<visible>Container.Content(seasons)</visible>
			<include>HiddenContainer</include>
			<content limit="1">$VAR[EmbuaryHelper_NextUp]</content>
		</control>
		
		<!-- native GUI Buttons -->
		
		<control type="button" id="3">
			<visible>Control.IsEnabled(3)</visible>
			<include content="HiddenObject" />
		</control>
		<control type="togglebutton" id="4">
			<visible>Control.IsEnabled(4)</visible>
			<include content="HiddenObject" />
		</control>
		
		<control type="group">
			<include>GlobalBackground</include>
		</control>
		
		<control type="group" id="70">
			<descriptiopn>viewtypes</descriptiopn>
			
			<include content="Animation_TransitionFadeOut">
				<param name="condition" value="$EXP[Infodialog_IsActive] | Window.IsActive(mediasource)" />
			</include>
			
			<centerleft>50%</centerleft>
			
			<!-- Shortcut -->
			<include content="SwanShortcuts_Container" condition="!String.IsEmpty(Window(home).Property(custom_widget_nr)" />
				
			
			<!-- Regular -->
			<include condition="String.IsEmpty(Window(home).Property(custom_widget_nr)">view50</include>
			<include condition="String.IsEmpty(Window(home).Property(custom_widget_nr)">Simple_Panels</include>
			<include condition="String.IsEmpty(Window(home).Property(custom_widget_nr)">view58</include>
			
			
			<control type="group">
				<descriptiopn>menucontrol test viewtype toggle</descriptiopn>
				<visible>ControlGroup(9000).HasFocus()</visible>
				
				<control type="image">
					<top>500</top>
					<height>300</height>
					<left>400</left>
					<texture>colors/white.png</texture>
					<colordiffuse>white</colordiffuse>
					<aspectratio>stretch</aspectratio>
				</control>
			
				<include content="Content_Menucontrol_SkinsettingButtons_MyVideoNav" condition="String.IsEmpty(Window(home).Property(custom_widget_nr)" />
			</control>
		</control>
		
		<control type="group">
			<!-- may rework ,or move to include itself -->
			<visible type="fade">!$EXP[Infodialog_IsActive]</visible>
			<visible>String.IsEmpty(Window(home).Property(SetShortcutInProgress)</visible>
			<animation reversible="true" effect="slide" start="0,0" end="0,-110" tween="quadratic" time="400" condition="Control.IsVisible(58) + !Control.HasFocus(58001)">conditional</animation>
			<include>HeaderBarMedia</include>
		</control>
		
		<include content="swan_debug_overlay">
			<param name="textleft" value="1  istitem.filenameandpath :  $INFO[listitem.filenameandpath]

2  listitem.path :         $INFO[listitem.path]

3  ListItem.FolderName :  $INFO[ListItem.FolderName]

4  Container.FolderPath :  $INFO[Container.FolderPath]

5  Container(58).ListItemAbsolute(0).label  

6 window Prop Shortcuts $INFO[Window(home).Property(custom_widget_nr)]
7 window Prop SetShortcutInProgress $INFO[Window(home).Property(SetShortcutInProgress)]

8
9
10

[B]listitems(s)[/B]
   $INFO[listitem.dbid,current dbid :    ,    ]
   $INFO[listitem.dbtype,current DBTYPE :    ,    ]
   $INFO[listitem.label,label:    ,    ]

[B]get byid container(2000)[/B]
   $INFO[container(2000).listitem.dbid,container 2000 dbid :    ,    ]
   $INFO[container(2000).listitem.dbtype,container 2000 dbtype :    ,    ]
   $INFO[container(2000).listitem.label,container 2000 label :    ,    ]


[B]get listitem-skinPROPERTYS from hidden actions[/B]
   $INFO[Window(Home).Property(dbid),Window(Home).Property(dbid)    ,]
   $INFO[Window(Home).Property(rating),Window(Home).Property(rating)    ,]
   $INFO[Window(Home).Property(totalseasons),Window(Home).Property(totalseasons)    ,]
   $INFO[Window(Home).Property(totalepisodes),Window(Home).Property(totalepisodes)    ,]
   $INFO[Window(Home).Property(status),Window(Home).Property(status)    ,]"/>
</include>
	</controls>
</window>
