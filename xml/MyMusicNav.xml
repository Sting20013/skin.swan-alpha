<?xml version="1.0" encoding="UTF-8"?>
<window>
<!-- 	1.38 MyMusicNav.xml
ID 	Type 					Description
2 	button 					Select viewtype (list, thumbnail, media info, etc...)
3 	button 					Select sort method (sort by: name, date size, etc...)
4 	togglebutton 			Select sortmode (ascending or descending)
5 	radiobutton 			Switch to file mode
8 	edit 					Search for a string anywhere in the Kodi music database
12 	label 					Number of items in the list
15 	label 					Filter label
16 	radiobutton 			Start party mode (randomly play songs from your entire music collection)
17 	button 					Manually enter artist and album name to lookup the artist and album information on the internet
18 	label 					Warning to the user to turn off library mode when no scanned media is found
19 	radiobutton / edit 		Filter the media files to only show items that include the specified string in the name
20 	button 					Update library  
-->
	<backgroundcolor>background</backgroundcolor>
	<views>50,51,52,53,54</views>
	<menucontrol>9000</menucontrol>
	<defaultcontrol always="true">50</defaultcontrol>

<controls>
	<!-- native GUI Buttons -->
		
	<control type="button" id="3">
		<visible>Control.IsEnabled(3)</visible>
		<include content="HiddenObject" />
	</control>
	<control type="togglebutton" id="4">
		<visible>Control.IsEnabled(4)</visible>
		<include content="HiddenObject" />
	</control>
	
	<control type="group">
		<visible>!Skin.HasSetting(BlurEnabled)</visible>
		<include>GlobalBackground</include>
	</control>
	<control type="group">
		<visible>Skin.HasSetting(BlurEnabled)</visible>
		<include>GlobalBlurredBackground</include>
	</control>
	
	<control type="group" id="70">
			<descriptiopn>viewtypes</descriptiopn>
			
			<include content="Animation_TransitionFadeOut">
				<param name="condition" value="$EXP[Infodialog_IsActive] | Window.IsActive(mediasource)" />
			</include>
			
			<centerleft>50%</centerleft>
			
			<!-- Shortcut -->
			<include content="SwanShortcuts_Container" condition="!String.IsEmpty(Window(home).Property(custom_widget_nr))" />
				
			
			<!-- Regular -->
			<include condition="String.IsEmpty(Window(home).Property(custom_widget_nr))">view50</include>
			<include condition="String.IsEmpty(Window(home).Property(custom_widget_nr))">Simple_Panels</include>
			<include condition="String.IsEmpty(Window(home).Property(custom_widget_nr))">view58</include>
			
			
			<control type="group">
				<descriptiopn>menucontrol test viewtype toggle</descriptiopn>
				<visible>ControlGroup(9000).HasFocus()</visible>
				
				<control type="image">
					<top>500</top>
					<height>300</height>
					<left>400</left>
					<texture>colors/white.png</texture>
					<colordiffuse>white</colordiffuse>
					<aspectratio>stretch</aspectratio>
				</control>
			
				<include content="Content_Menucontrol_SkinsettingButtons_MyVideoNav" condition="String.IsEmpty(Window(home).Property(custom_widget_nr))" />
			</control>
			
			<control type="scrollbar" id="60">
				<right>2%</right>
				<top>160</top>
				<height>74%</height>
				<onup>60</onup>
				<ondown>60</ondown>
				<onleft>SetFocus(50)</onleft>
				<onright>19</onright>
			</control>
		
		</control>
		
		<control type="group">
			<!-- may rework ,or move to include itself -->
			<visible type="fade">!$EXP[Infodialog_IsActive]</visible>
			<visible>String.IsEmpty(Window(home).Property(SetShortcutInProgress))</visible>
			<animation reversible="true" effect="slide" start="0,0" end="0,-110" tween="quadratic" time="400" condition="Control.IsVisible(58) + !Control.HasFocus(58001)">conditional</animation>
			<include content="HeaderBar">
				<param name="HasSearchBar" value="true" />
				<param name="HasBGPanel" value="Skin.HasSetting(MediaWindow_UseHeaderBG)" />
				<param name="HeadingAlignment" value="center" />
				
			</include>
		</control>
		
		<!-- <include content="FooterBar" /> -->
		
		<!-- menucontrol need move here -->
		
		<include content="NativeString_Filter" />
		
	</controls>
</window>
