<?xml version="1.0" encoding="UTF-8"?>
<includes>
	
	<include name="HeaderBar">
		<param name="HasSearchBar" default="false" />
		<param name="HasBGPanel" default="true" />
		<param name="HeadingAlignment" default="left" />
		
		<definition>
		<control type="image">
			<description>BG PANEL</description>
			<visible>$PARAM[HasBGPanel]</visible>
			<width>100%</width>
			<height>110</height>
			<texture colordiffuse="$VAR[Header_BG]">$VAR[HeaderBarTexture]</texture>
			<aspectratio>stretch</aspectratio>
		</control>
		<control type="grouplist">
			<posx>50</posx>
			<posy>10</posy>
			<height>110</height>
			<orientation>vertical</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<itemgap>5</itemgap>
			
			<control type="group">
				<description>TOP</description>
				<height>50</height>
				<width>99%</width>
				<control type="edit" id="100002">
					<visible>$PARAM[HasSearchBar]</visible>
					<description>default menucontrol as option ?, add container based on vis ?</description>
					<onup>50</onup>
					<ondown>50</ondown>
					<top>15</top>
					<left>60</left>
					<height>60</height>
					<width>400</width>
					<hinttext>$LOCALIZE[19140]</hinttext>
					<texturefocus diffuse="buttons/button_6to1_Trans.png">colors/white50.png</texturefocus>	
					<texturenofocus diffuse="buttons/button_6to1_Trans.png">colors/white10.png</texturenofocus>
					<font>SearchControl</font>
					<textoffsetx>20</textoffsetx>
					<textoffsety>15</textoffsety>
					<textcolor>grey</textcolor>
					<focusedcolor>black</focusedcolor>
					<disabledcolor />
					<invalidcolor />
					<aligny>center</aligny>
					<pulseonselect>no</pulseonselect>
					<label />
				</control>
				
				<control type="label">
					<description>Main Section Name left,  temp System.CurrentWindow later VAR</description>
					<top>10</top>
					<height>50</height>
					<align>$PARAM[HeadingAlignment]</align>
					<label>$VAR[CurrentContent]</label>
					<font>HeaderBar_Media</font>
					<textcolor>$VAR[Header_TextMain]</textcolor>
				</control>
				<control type="label">
					<description>SytemTime right,slide when weather disabled</description>
					<!-- <animation effect="fade" end="50" time="0" condition="true">conditional</animation> -->
					<right>130</right>
					<width>450</width>
					<height>50</height>
					<align>right</align>
					<label>$INFO[System.Time]</label>
					<font>font_clock</font>
					<textcolor>$VAR[Header_TextSecondary]</textcolor>
				</control>
			</control>
			
			<control type="group">
				<description>SUB</description>
				<height>30</height>
				<width>99%</width>
				<control type="label">
					<description>Sub-Section Name - left</description>
					<top>10</top>
					<height>30</height>
					<align>$PARAM[HeadingAlignment]</align>
					<aligny>bottom</aligny>
					<label>$VAR[CurrentContent_Info]</label>
					<font>DialogListItem</font>
					<textcolor>$VAR[Header_TextMain]</textcolor>
					<visible>!Skin.HasSetting(HideSubHeaderInfo)</visible>
					<!-- <visible>!String.IsEmpty(Container.Content)</visible> -->
					<visible>!Control.IsVisible(58)</visible>
				</control>
				<control type="label">
					<description>day - right, slide when weather disabled</description>
					<right>130</right>
					<width>450</width>
					<height>20</height>
					<align>right</align>
					<aligny>bottom</aligny>
					<label>$INFO[System.Date]</label>
					<font>HeaderBar_Sub</font>
					<!-- <font>font12</font> -->
					<textcolor>$VAR[Header_TextMain]</textcolor>
				</control>
				
			</control>
			
		</control>
		<control type="group">
			<right>10</right>
			<width>110</width>
			<description>weather</description>
			<control type="image">
				<description>seperator</description>
				<top>9</top>
				<height>90</height>
				<width>1</width>
				<texture colordiffuse="white">colors/white30.png</texture>
				<aspectratio align="left">stretch</aspectratio>
			</control>
			<control type="label">
				<description>day - right</description>
				<top>65</top>
				
				<width>110</width>
				<height>20</height>
				<align>center</align>
				<aligny>bottom</aligny>
				<label>$INFO[Weather.Temperature]</label>
				<font>font23_title</font>
				<textcolor>$VAR[Header_TextMain]</textcolor>
			</control>
			<control type="image">
				<!-- <visible>!Skin.HasSetting(HideHeaderWeather) + !String.IsEmpty(Weather.Temperature) + !String.Contains(Weather.Temperature,$LOCALIZE[503]) + !String.IsEqual(Weather.fanartcode,na) + Weather.IsFetched</visible> -->
				<description>png</description>
				<top>5</top>
				<height>65</height>
				<width>110</width>
				
				<texture colordiffuse="$VAR[Header_TextMain]">$INFO[Weather.FanartCode,resource://resource.images.weathericons.outline-hd/,.png]</texture>
				<!-- <texture>$INFO[Weather.FanartCode,resource://resource.images.weathericons.outline/,.png]</texture>
				 -->
				<!-- <bordertexture>$INFO[Weather.FanartCode,resource://resource.images.weathericons.outline/,.jpg]</bordertexture> -->
				<!-- , skinstring equal addon path -->
				<aspectratio align="center">keep</aspectratio>
			</control>
			
		</control>
		
		</definition>
	</include>
	
					
	<variable name="CurrentContent">
		<!-- <value condition="Container.Content(movies)">F I L M E</value>
		<value condition="Container.Content(tvshows)">S E R I E N</value>
		<value condition="Container.Content(seasons)">$LOCALIZE[33054]</value>
		
		<value condition="Container.Content(sets)">$LOCALIZE[20434]</value>
		<value condition="Container.Content(images)">$LOCALIZE[10002]</value>
		<value condition="Container.Content(artists)">$LOCALIZE[133]</value>
		
		<value condition="Container.Content(albums)">$LOCALIZE[132]</value>
		<value condition="Container.Content(musicvideos)">$LOCALIZE[20389]</value>
		<value condition="Container.Content(songs)">$LOCALIZE[134]</value>
		<value>$INFO[System.CurrentWindow]</value> -->
		<value condition="Container.Content(movies)">[UPPERCASE][B]$LOCALIZE[342][/B][/UPPERCASE]</value>
		<value condition="Container.Content(tvshows)">[UPPERCASE][B]$LOCALIZE[20343][/B][/UPPERCASE]</value>
		<value condition="Container.Content(seasons)">[UPPERCASE][B]$LOCALIZE[33054][/B][/UPPERCASE]</value>
		
		<value condition="Container.Content(sets)">[UPPERCASE][B]$LOCALIZE[20434][/B][/UPPERCASE]</value>
		<value condition="Container.Content(images)">[UPPERCASE][B]$LOCALIZE[10002][/B][/UPPERCASE]</value>
		<value condition="Container.Content(artists)">[UPPERCASE][B]$LOCALIZE[133][/B][/UPPERCASE]</value>
		
		<value condition="Container.Content(albums)">[UPPERCASE][B]$LOCALIZE[132][/B][/UPPERCASE]</value>
		<value condition="Container.Content(musicvideos)">[UPPERCASE][B]$LOCALIZE[20389][/B][/UPPERCASE]</value>
		<value condition="Container.Content(songs)">[UPPERCASE][B]$LOCALIZE[134][/B][/UPPERCASE]</value>
		<value>$INFO[System.CurrentWindow]</value>
	</variable>
	<!-- 
	Window(Home).Property(key) 	The home window has the following info labels.

Movies.Count, 
Movies.Watched, 
Movies.UnWatched, 

TVShows.Count, 
TVShows.Watched, 
TVShows.UnWatched, 

Episodes.Count, 
Episodes.Watched, 
Episodes.UnWatched, 

MusicVideos.Count, 
MusicVideos.Watched, 
MusicVideos.UnWatched, 

Music.SongsCount, 
Music.AlbumsCount, 
Music.ArtistsCount

LatestMovie.[1-10].Title, LatestMovie.[1-10].Year, LatestMovie.[1-10].RunningTime, LatestMovie.[1-10].Rating, LatestMovie.[1-10].Plot, LatestMovie.[1-10].Trailer, LatestMovie.[1-10].Thumb, LatestMovie.[1-10].Fanart, LatestMovie.[1-10].Path

LatestEpisode.[1-10].ShowTitle, LatestEpisode.[1-10].EpisodeTitle, LatestEpisode.[1-10].EpisodeNo, LatestEpisode.[1-10].EpisodeSeason, LatestEpisode.[1-10].EpisodeNumber, LatestEpisode.[1-10].Rating, LatestEpisode.[1-10].Plot, LatestEpisode.[1-10].Thumb, LatestEpisode.[1-10].ShowThumb, LatestEpisode.[1-10].SeasonThumb, LatestEpisode.[1-10].Fanart, LatestEpisode.[1-10].Path

LatestMusicVideo.[1-10].Title, LatestMusicVideo.[1-10].Thumb, LatestMusicVideo.[1-10].Year, LatestMusicVideo.[1-10].Plot, LatestMusicVideo.[1-10].RunningTime, LatestMusicVideo.[1-10].Path, LatestMusicVideo.[1-10].Artist, LatestMusicVideo.[1-10].Fanart

LatestSong.[1-10].Title, LatestSong.[1-10].Artist, LatestSong.[1-10].Album, LatestSong.[1-10].Year, LatestSong.[1-10].Rating, LatestSong.[1-10].Thumb, LatestSong.[1-10].Fanart, LatestSong.[1-10].Path

LatestAlbum.[1-10].Title, LatestAlbum.[1-10].Artist, LatestAlbum.[1-10].Year, LatestAlbum.[1-10].Rating, LatestAlbum.[1-10].Thumb, LatestAlbum.[1-10].Fanart, LatestAlbum.[1-10].Path  -->
	<variable name="CurrentContent_Info">
		<value condition="Container.Content(movies)">$LOCALIZE[20161] : [COLOR=$VAR[Header_TextSecondary]]$INFO[Window(Home).Property(Movies.Count)][/COLOR] [B]|[/B] $LOCALIZE[16101] : [COLOR=$VAR[Header_TextSecondary]]$INFO[Window(Home).Property(Movies.UnWatched)][/COLOR]</value>
		<value condition="Container.Content(tvshows)">$LOCALIZE[20161] : [COLOR=$VAR[Header_TextSecondary]]$INFO[Window(Home).Property(TVShows.Count)][/COLOR] [B]|[/B] $LOCALIZE[16101] : [COLOR=$VAR[Header_TextSecondary]]$INFO[Window(Home).Property(TVShows.UnWatched)][/COLOR]</value>
		<value condition="Window.IsMedia">$LOCALIZE[20161] : [COLOR=$VAR[Header_TextSecondary]]$INFO[Container(id).NumItems][/COLOR] [B]|[/B] $LOCALIZE[16101] : [COLOR=$VAR[Header_TextSecondary]]$INFO[Container.TotalUnWatched][/COLOR]</value>
		<value>[COLOR=$VAR[Header_TextSecondary]]$INFO[System.CurrentControl][/COLOR]</value>
	</variable>
	
	<include name="FooterBar">
		<control type="image">
			<description>bordersize order left,top,right,bottom</description>
			<width>100%</width>
			<height>120</height>
			<bottom>0</bottom>
			<texture border="0" colordiffuse="22FFFFFF">colors/white.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
		<control type="grouplist">
			<posx>50</posx>
			<posy>5</posy>
			<height>140</height>
			<orientation>vertical</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<itemgap>5</itemgap>
			
			<control type="group">
			<height>60</height>
			<width>99%</width>
				<control type="label">
					<description>Main Section Name</description>
					<width>auto</width>
					<height>60</height>
					<aligny>center</aligny>
					<label>[B]HEADING SECTION[/B]   label 1 left $VAR[Label_HeaderBar]</label>
					<font>font60</font> <!-- topheader -->
					<textcolor>orange</textcolor>
				</control>
				<control type="label">
					<description>Main Section Name</description>
					<width>auto</width>
					<height>60</height>
					<aligny>center</aligny>
					<align>right</align>
					<label>Weather BAR</label>
					<font>font60</font> <!-- topheader -->
					<textcolor>orange</textcolor>
				</control>
			</control>
			<control type="group">
			<height>60</height>
			<width>99%</width>
				<control type="label">
					<description>Sub-Section Name</description>
					<width>auto</width>
					<height>60</height>
					<aligny>center</aligny>
					<label>SUBHEADING labl2 $VAR[Label_SubHeaderBar] MAking own custom Icons is damn time stealing</label>
					<font>font40</font> <!-- subheader -->
					<textcolor>midgrey</textcolor>
				</control>
				<control type="label">
					<description>Sub-Section Name</description>
					<width>auto</width>
					<height>60</height>
					<aligny>center</aligny>
					<align>right</align>
					<label>SystemTime</label>
					<font>font40</font> <!-- subheader -->
					<textcolor>midgrey</textcolor>
				</control>
			</control>
		
		</control>
	
	</include>
	
	<include name="DialogBackground_TriplePanel">
		<!-- fs bg -->
		<control type="image">
			<description>center,use cdiffuse global middle layer</description>
			<left>0</left>
			<top>0</top>
			<width>100%</width>
			<height>100%</height>
			<texture>colors/white.png</texture>
			<colordiffuse>$VAR[BackgroundImage_CDiffuse]</colordiffuse>
			<aspectratio>stretch</aspectratio>
        </control>
		
		<!-- change cdiffuse alpha to #alpha#000000png -->
		<control type="image">
			<description>leftbg alpha60</description>
			<left>0</left>
			<top>0</top>
			<width>33.3%</width>
			<height>100%</height>
            <texture>colors/white.png</texture>
            <colordiffuse>99000000</colordiffuse>
			<aspectratio>stretch</aspectratio>
        </control>
		<control type="image">
			<description>center alpha80</description>
			<left>33.3%</left>
			<top>0</top>
			<width>33.3%</width>
			<height>100%</height>
            <texture>colors/white.png</texture>
            <colordiffuse>CC000000</colordiffuse>
			<aspectratio>stretch</aspectratio>
        </control>
		<control type="image">
			<description>right alpha100</description>
			<left>66.6%</left>
			<top>0</top>
			<width>33.4%</width>
			<height>100%</height>
            <texture>colors/white.png</texture>
            <colordiffuse>FF000000</colordiffuse>
			<aspectratio>stretch</aspectratio>
        </control>
	</include>
	
	<include name="GlobalBackground">
		
		<control type="group">
			<include>HiddenObject</include>
			<control type="image" id="99006">
				<texture background="true">$VAR[FanartBackground]</texture>
				<visible>Skin.HasSetting(ShowFanartBackground) | $EXP[IsNetflixLayout] | Window.IsActive(filebrowser)</visible>
			</control>
			<include condition="Skin.HasSetting(ShowFanartBackground) + Skin.HasSetting(EnableRotatingExtraFanart)">Rotating_ExtraFanartBackground</include>
		</control>
		
		<control type="group">
			
			<!-- Ground Layer - use 'backgroundcolor' -->
			
			<!-- MIDDLE - ARTWORK LAYER (Artowrk) -->
			<control type="multiimage" id="99004">
				<depth>DepthBackground</depth>
				<imagepath background="true">$VAR[backgroundVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<fadetime>300</fadetime>
				<colordiffuse>$VAR[BackgroundImage_CDiffuse]</colordiffuse>
				<randomize>true</randomize>
				<timeperimage>6000</timeperimage>
				<loop>yes</loop>
				<visible>!$EXP[IsNetflixLayout]</visible>
				<animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation) | Window.Is(settings)">Conditional</animation>
				<animation effect="slide" start="-10,-10" end="10,10" time="8000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation) | Window.Is(settings)">Conditional</animation>
			</control>
			
			<include content="BG_Overlay" condition="!Window.IsActive(home) + !String.IsEmpty(Skin.String(BackgroundOverlayTexture))" />
			
			<include content="BG_Overlay" condition="Window.IsActive(home) + !String.IsEmpty(Skin.String(BackgroundOverlayTextureHome))">
				<param name="texture" value="$INFO[Skin.String(BackgroundOverlayTextureHome)]" />
				<param name="colordiffuse" value="$VAR[BackgroundOverlay_CDiffuse_Home]" />
			</include>
		
		</control>
       
        
    </include>
    
    
    <include name="GlobalBlurredBackground">
		
		<control type="group">
			<include>HiddenObject</include>
			
			<control type="image" id="99006">
				<texture background="true">$VAR[FanartBackground]</texture>
				<description>default container</description>
			</control>
			<control type="image" id="99005">
				<description>blurred container</description>
				<texture background="true">$VAR[FanartBackground]</texture>
			</control>
			
		</control>
		
		
		<control type="group">
			
			<control type="multiimage" id="99004">
				<description>conditional diffuse non-blurred bg img</description>
				<imagepath diffuse="" background="true">$VAR[backgroundVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<fadetime>300</fadetime>
				<colordiffuse>$VAR[BackgroundImage_CDiffuse]</colordiffuse>
				<randomize>true</randomize>
				<timeperimage>6000</timeperimage>
				<loop>yes</loop>
				<visible>true</visible>
				
			</control>
		
		
		
			<control type="image">
				<description>conditional diffuse - blurred bg overlay img</description>
				<visible>true</visible>
				<colordiffuse>$VAR[BackgroundImage_CDiffuse]</colordiffuse>
				<texture diffuse="">$INFO[Window(home).Property(listitem_blurred)]</texture>
			</control>
			<!--
			<control type="multiimage">
				<colordiffuse>$VAR[BackgroundImage_CDiffuse]</colordiffuse>
				<imagepath diffuse="diffuse/gradient_left.png">$INFO[Window(home).Property(listitem_blurred)]</imagepath>
			</control>
			
			<colordiffuse>$INFO[Window(home).Property(listitem_color)]</colordiffuse>
			<texture diffuse="diffuse/gradient_left.png">$INFO[Window(home).Property(listitem_blurred)]</texture>
			-->
		</control>
		
		
       
        
    </include>
	
	<!-- TOP - 3rd LAYER -->
	<!-- <animation effect="fade" start="100" end="40" delay="200" time="1500" pulse="false" condition="Player.HasVideo + !$EXP[IsNetflixLayout]">Conditional</animation> -->
			
	<include name="BG_Overlay">
		<param name="texture" default="$INFO[Skin.String(BackgroundOverlayTexture)]" />
		<param name="colordiffuse" default="$VAR[BackgroundOverlay_CDiffuse]" />
		<definition>
			<control type="image">
				<description>in dialog use colors based on condition - home - generell, decide if overlay should be visible - exp'infodialogactive'</description>
				<depth>DepthBackground2</depth>
				<texture>$PARAM[texture]</texture>
				<colordiffuse>$PARAM[colordiffuse]</colordiffuse>
			</control>
		</definition>
	</include>
	
	<!-- <variable name=""> -->
	<!-- comon $INFO[Skin.String(BackgroundOverlayTexture)] -->
	<!-- home $INFO[Skin.String(BackgroundOverlayTextureHome)] -->
	<!-- </variable> -->
	
	<include name="Rotating_ExtraFanartBackground">
		<control type="fadelabel" id="99007">
			<!-- common visibility conditions -->
			<visible>
                [Window.IsActive(DialogVideoInfo.xml)] |
                [Container.Content(Genres) + Skin.String(moviegenrefanart.path) + !String.IsEmpty(ListItem.label) + !String.IsEqual(ListItem.label,..)] | 
                [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(musicvideos) | Container.Content(albums) | Container.Content(songs) | Container.Content(artists)]
            </visible>
			<!-- additional visibility conditions -->
			<!-- <include condition="Window.IsMedia">disabledExtraFanart</include> -->
			<!-- common movie,show,artists -->
			<info>Container.ListItem.Art(fanart)</info>
			<info>Container.ListItem.Art(fanart1)</info>
			<info>Container.ListItem.Art(fanart2)</info>
			<info>Container.ListItem.Art(fanart3)</info>
			<info>Container.ListItem.Art(fanart4)</info>
			<info>Container.ListItem.Art(fanart5)</info>
			<info>Container.ListItem.Art(fanart6)</info>
			<info>Container.ListItem.Art(fanart7)</info>
			<info>Container.ListItem.Art(fanart8)</info>
			<info>Container.ListItem.Art(fanart9)</info>
			<info>Container.ListItem.Art(fanart10)</info>
			<info>Container.ListItem.Art(fanart11)</info>
			<info>Container.ListItem.Art(fanart12)</info>
			<info>Container.ListItem.Art(fanart13)</info>
			<info>Container.ListItem.Art(fanart14)</info>
			<info>Container.ListItem.Art(fanart15)</info>
			<info>Container.ListItem.Art(fanart16)</info>
			<info>Container.ListItem.Art(fanart17)</info>
			<info>Container.ListItem.Art(fanart18)</info>
			<info>Container.ListItem.Art(fanart19)</info>
			<info>Container.ListItem.Art(fanart20)</info>
			<!-- tvshow for seasons,episodes -->
			<info>Container.ListItem.Art(tvshow.fanart)</info>
			<info>Container.ListItem.Art(tvshow.fanart1)</info>
			<info>Container.ListItem.Art(tvshow.fanart2)</info>
			<info>Container.ListItem.Art(tvshow.fanart3)</info>
			<info>Container.ListItem.Art(tvshow.fanart4)</info>
			<info>Container.ListItem.Art(tvshow.fanart5)</info>
			<info>Container.ListItem.Art(tvshow.fanart6)</info>
			<info>Container.ListItem.Art(tvshow.fanart7)</info>
			<info>Container.ListItem.Art(tvshow.fanart8)</info>
			<info>Container.ListItem.Art(tvshow.fanart9)</info>
			<info>Container.ListItem.Art(tvshow.fanart10)</info>
			<info>Container.ListItem.Art(tvshow.fanart11)</info>
			<info>Container.ListItem.Art(tvshow.fanart12)</info>
			<info>Container.ListItem.Art(tvshow.fanart13)</info>
			<info>Container.ListItem.Art(tvshow.fanart14)</info>
			<info>Container.ListItem.Art(tvshow.fanart15)</info>
			<info>Container.ListItem.Art(tvshow.fanart16)</info>
			<info>Container.ListItem.Art(tvshow.fanart17)</info>
			<info>Container.ListItem.Art(tvshow.fanart18)</info>
			<info>Container.ListItem.Art(tvshow.fanart19)</info>
			<info>Container.ListItem.Art(tvshow.fanart20)</info>
			<!-- set -->
			<!-- <info>Container.ListItem.Art(set.fanart)</info>
			<info>Container.ListItem.Art(set.fanart1)</info>
			<info>Container.ListItem.Art(set.fanart2)</info>
			<info>Container.ListItem.Art(set.fanart3)</info>
			<info>Container.ListItem.Art(set.fanart4)</info>
			<info>Container.ListItem.Art(set.fanart5)</info>
			<info>Container.ListItem.Art(set.fanart6)</info>
			<info>Container.ListItem.Art(set.fanart7)</info>
			<info>Container.ListItem.Art(set.fanart8)</info>
			<info>Container.ListItem.Art(set.fanart9)</info>
			<info>Container.ListItem.Art(set.fanart10)</info>
			<info>Container.ListItem.Art(set.fanart11)</info>
			<info>Container.ListItem.Art(set.fanart12)</info>
			<info>Container.ListItem.Art(set.fanart13)</info>
			<info>Container.ListItem.Art(set.fanart14)</info>
			<info>Container.ListItem.Art(set.fanart15)</info>
			<info>Container.ListItem.Art(set.fanart16)</info>
			<info>Container.ListItem.Art(set.fanart17)</info>
			<info>Container.ListItem.Art(set.fanart18)</info>
			<info>Container.ListItem.Art(set.fanart19)</info>
			<info>Container.ListItem.Art(set.fanart20)</info> -->
			<!-- artistfanart for album , song, musicvideos -->
			<info>Container.ListItem.Art(artist.fanart)</info>
			<info>Container.ListItem.Art(artist.fanart1)</info>
			<info>Container.ListItem.Art(artist.fanart2)</info>
			<info>Container.ListItem.Art(artist.fanart3)</info>
			<info>Container.ListItem.Art(artist.fanart4)</info>
			<info>Container.ListItem.Art(artist.fanart5)</info>
			<info>Container.ListItem.Art(artist.fanart6)</info>
			<info>Container.ListItem.Art(artist.fanart7)</info>
			<info>Container.ListItem.Art(artist.fanart8)</info>
			<info>Container.ListItem.Art(artist.fanart9)</info>
			<info>Container.ListItem.Art(artist.fanart10)</info>
			<info>Container.ListItem.Art(artist.fanart11)</info>
			<info>Container.ListItem.Art(artist.fanart12)</info>
			<info>Container.ListItem.Art(artist.fanart13)</info>
			<info>Container.ListItem.Art(artist.fanart14)</info>
			<info>Container.ListItem.Art(artist.fanart15)</info>
			<info>Container.ListItem.Art(artist.fanart16)</info>
			<info>Container.ListItem.Art(artist.fanart17)</info>
			<info>Container.ListItem.Art(artist.fanart18)</info>
			<info>Container.ListItem.Art(artist.fanart19)</info>
			<info>Container.ListItem.Art(artist.fanart20)</info>
			<randomize>true</randomize>
			<pauseatend>5000</pauseatend>
			<scroll>false</scroll>
			<scrollout>false</scrollout>
		</control>
	</include>

	<variable name="FanartBackground">
		 <!-- genre fanart -->
		<value condition="Container.Content(Genres) + Skin.String(moviegenrefanart.path) + !String.IsEmpty(ListItem.label) + !String.IsEqual(ListItem.label,..)">$INFO[Skin.String(moviegenrefanartpath)]/$INFO[ListItem.Label].jpg</value>
		<!-- normal fanart backgrounds -->
		<value condition="!String.IsEmpty(ListItem.PicturePath)">$INFO[ListItem.PicturePath]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(albumartist.fanart))">$INFO[Container.Art(albumartist.fanart)]</value>
	</variable>

	<variable name="backgroundVar">
		<!-- <value condition="[Window.IsActive(LoginScreen.xml) | Window.IsActive(StartUp.xml)] + Skin.String(LoginBackground)">$INFO[Skin.String(LoginBackground)]</value> -->
		<!-- ANIMATED FANART -->
		<value condition="!String.IsEmpty(ListItem.Art(Animatedfanart)) + Skin.HasSetting(AnimatedFanart)">$INFO[ListItem.Art(AnimatedFanart)]</value>
		<value condition="Control.IsVisible(99007)">$INFO[Control.GetLabel(99007)]</value>
		<value condition="Control.IsVisible(99006) + !String.IsEmpty(Control.GetLabel(99006))">$INFO[Control.GetLabel(99006)]</value>
		<!-- weather fanart -->
		<value condition="Window.IsActive(MyWeather.xml)">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.fanartCode)]$INFO[Skin.String(WeatherFanArtPack.ext)]</value>
		<value condition="Skin.String(BackgroundTexture)">$INFO[Skin.String(BackgroundTexture)]</value>
		<value>special://skin/extras/backgroundimages/pattern1.jpg</value>
	</variable>
	
	
	
	<variable name="HeaderBarTexture">
		<value condition="!String.IsEmpty(Skin.String(HeaderBarTexture))">$INFO[Skin.String(HeaderBarTexture)]</value>
		<value>colors/white.png</value>
	</variable>
</includes>