<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="HeaderBar">
		<control type="image">
			<width>100%</width>
			<height>110</height>
			<texture colordiffuse="$VAR[Header_BG]">$VAR[HeaderBarTexture]</texture>
			<aspectratio>stretch</aspectratio>
		</control>
		<control type="grouplist">
			<posx>50</posx>
			<posy>10</posy>
			<height>120</height>
			<orientation>vertical</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<itemgap>5</itemgap>
			
			<control type="group">
			<height>40</height>
			<width>99%</width>
				<control type="label">
					<description>Main Section Name left,  temp System.CurrentWindow later VAR</description>
					<with>auto</with>
					<height>50</height>
					<aligny>bottom</aligny>
					<label>[UPPERCASE][B]$INFO[System.CurrentWindow][/B][/UPPERCASE]</label>
					<font>HeaderBar_Main</font>
					<textcolor>$VAR[Header_TextMain]</textcolor>
				</control>
				
				
					<!-- 
					<control type="group">
			 Weather.Conditions 	Current weather conditions â€“ this is looked up in a background process. 	
						Weather.Temperature 	Current weather temperature 	
						Weather.Location 	City/town which the above two items are for 	
						Weather.fanartcode 	Current weather fanartcode. 	
						Weather.plugin 

				
				<top>5</top>
				
					<control type="multiimage">
						<right>0</right>
						<imagepath>$INFO[Weather.Fanartcode,special://resource.images.weathericons.outline-hd/,.jpg]$INFO[Skin.String(WeatherIconPack.ext)]</imagepath>
						<width>100</width>
						<height>100</height>
						<aspectratio>keep</aspectratio>
						<visible>!String.IsEmpty(Window(Weather).Property(Current.FanartCode)) + Skin.String(WeatherIconPack.path)</visible> 
					</control>
				
					
					<control type="label">
						<right>0</right>
						<align>right</align>
						<width>250</width>
						<label>[B]$INFO[Weather.Temperature][/B] - $INFO[Weather.Conditions]</label>
						<font>Reg16</font>
						<textcolor>blue</textcolor>
					</control>
					
				</control>
				-->
				
				
				
				<control type="label">
					<description>SytemTime right</description>
					<with>auto</with>
					<top>-20</top>
					<right>5</right>
					<height>50</height>
					<aligny>bottom</aligny>
					<align>right</align>
					<label>$INFO[System.Time]</label>
					<font>font60</font>
					<textcolor>$VAR[Header_TextSecondary]</textcolor>
				</control>
			</control>
			<control type="group">
			<height>30</height>
			<width>99%</width>
				<control type="label">
					<description>Sub-Section Name - left</description>
					<with>auto</with>
					<height>30</height>
					<aligny>top</aligny>
					<label>Subheader VAR[Label_SubHeaderBar] - Movies [COLOR=$VAR[Header_TextSecondary]](99)[/COLOR] - watched [COLOR=$VAR[Header_TextSecondary]](65)[/COLOR]</label>
					<font>HeaderBar_Sub</font>
					<textcolor>$VAR[Header_TextMain]</textcolor>
				</control>
				<control type="label">
					<description>day - right</description>
					<with>auto</with>
					<height>30</height>
					<aligny>top</aligny>
					<align>right</align>
					<label>$INFO[System.Date]</label>
					<font>HeaderBar_Sub</font>
					<textcolor>$VAR[Header_TextMain]</textcolor>
				</control>
			</control>
		
		</control>
	
	</include>
	
	<include name="FooterBar">
		<control type="image">
			<description>bordersize order left,top,right,bottom</description>
			<width>100%</width>
			<height>120</height>
			<bottom>0</bottom>
			<texture border="0" colordiffuse="22FFFFFF">colors/white.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
		<control type="grouplist">
			<posx>50</posx>
			<posy>5</posy>
			<height>140</height>
			<orientation>vertical</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<itemgap>5</itemgap>
			
			<control type="group">
			<height>60</height>
			<width>99%</width>
				<control type="label">
					<description>Main Section Name</description>
					<with>auto</with>
					<height>60</height>
					<aligny>center</aligny>
					<label>[B]HEADING SECTION[/B]   label 1 left $VAR[Label_HeaderBar]</label>
					<font>font60</font> <!-- topheader -->
					<textcolor>orange</textcolor>
				</control>
				<control type="label">
					<description>Main Section Name</description>
					<with>auto</with>
					<height>60</height>
					<aligny>center</aligny>
					<align>right</align>
					<label>Weather BAR</label>
					<font>font60</font> <!-- topheader -->
					<textcolor>orange</textcolor>
				</control>
			</control>
			<control type="group">
			<height>60</height>
			<width>99%</width>
				<control type="label">
					<description>Sub-Section Name</description>
					<with>auto</with>
					<height>60</height>
					<aligny>center</aligny>
					<label>SUBHEADING labl2 $VAR[Label_SubHeaderBar] MAking own custom Icons is damn time stealing</label>
					<font>font40</font> <!-- subheader -->
					<textcolor>dimgrey</textcolor>
				</control>
				<control type="label">
					<description>Sub-Section Name</description>
					<with>auto</with>
					<height>60</height>
					<aligny>center</aligny>
					<align>right</align>
					<label>SystemTime</label>
					<font>font40</font> <!-- subheader -->
					<textcolor>dimgrey</textcolor>
				</control>
			</control>
		
		</control>
	
	</include>
	
	<include name="DialogBackground_TriplePanel">
		<!-- fs bg -->
		<control type="image">
			<description>center,use cdiffuse global middle layer</description>
			<left>0</left>
			<top>0</top>
			<width>100%</width>
			<height>100%</height>
			<texture>colors/white.png</texture>
			<colordiffuse>$VAR[BackgroundImage_CDiffuse]</colordiffuse>
			<aspectratio>stretch</aspectratio>
        </control>
		
		<!-- change cdiffuse alpha to #alpha#000000png -->
		<control type="image">
			<description>leftbg alpha60</description>
			<left>0</left>
			<top>0</top>
			<width>33.3%</width>
			<height>100%</height>
            <texture>colors/white.png</texture>
            <colordiffuse>99000000</colordiffuse>
			<aspectratio>stretch</aspectratio>
        </control>
		<control type="image">
			<description>center alpha80</description>
			<left>33.3%</left>
			<top>0</top>
			<width>33.3%</width>
			<height>100%</height>
            <texture>colors/white.png</texture>
            <colordiffuse>CC000000</colordiffuse>
			<aspectratio>stretch</aspectratio>
        </control>
		<control type="image">
			<description>right alpha100</description>
			<left>66.6%</left>
			<top>0</top>
			<width>33.4%</width>
			<height>100%</height>
            <texture>colors/white.png</texture>
            <colordiffuse>FF000000</colordiffuse>
			<aspectratio>stretch</aspectratio>
        </control>
	</include>
	
	<include name="GlobalBackground">
		
		<control type="group">
			<include>HiddenObject</include>
			<control type="image" id="99006">
				<texture background="true">$VAR[FanartBackground]</texture>
				<visible>Skin.HasSetting(ShowFanartBackground) | $EXP[IsNetflixLayout] | Window.IsActive(filebrowser)</visible>
			</control>
			<include condition="Skin.HasSetting(ShowFanartBackground) + Skin.HasSetting(EnableRotatingExtraFanart)">Rotating_ExtraFanartBackground</include>
		</control>
		
		<control type="group">
			
			<!-- Ground Layer - use 'backgroundcolor' -->
			
			<!-- MIDDLE - ARTWORK LAYER (Artowrk) -->
			<control type="multiimage" id="99004">
				<depth>DepthBackground</depth>
				<imagepath background="true">$VAR[backgroundVar]</imagepath>
				<aspectratio>scale</aspectratio>
				<fadetime>300</fadetime>
				<colordiffuse>$VAR[BackgroundImage_CDiffuse]</colordiffuse>
				<randomize>true</randomize>
				<timeperimage>6000</timeperimage>
				<loop>yes</loop>
				<visible>!$EXP[IsNetflixLayout]</visible>
				<animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation) | Window.Is(settings)">Conditional</animation>
				<animation effect="slide" start="-10,-10" end="10,10" time="8000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation) | Window.Is(settings)">Conditional</animation>
			</control>
			
			<include content="BG_Overlay" condition="!Window.IsActive(home) + !String.IsEmpty(Skin.String(BackgroundOverlayTexture))" />
			
			<include content="BG_Overlay" condition="Window.IsActive(home) + !String.IsEmpty(Skin.String(BackgroundOverlayTextureHome))">
				<param name="texture" value="$INFO[Skin.String(BackgroundOverlayTextureHome)]" />
				<param name="colordiffuse" value="$VAR[BackgroundOverlay_CDiffuse_Home]" />
			</include>
		</control>
    </include>
	
	<!-- TOP - 3rd LAYER -->
	<!-- <animation effect="fade" start="100" end="40" delay="200" time="1500" pulse="false" condition="Player.HasVideo + !$EXP[IsNetflixLayout]">Conditional</animation> -->
			
	<include name="BG_Overlay">
		<param name="texture" default="$INFO[Skin.String(BackgroundOverlayTexture)]" />
		<param name="colordiffuse" default="$VAR[BackgroundOverlay_CDiffuse]" />
		<definition>
			<control type="image">
				<description>in dialog use colors based on condition - home - generell, decide if overlay should be visible - exp'infodialogactive'</description>
				<depth>DepthBackground2</depth>
				<texture>$PARAM[texture]</texture>
				<colordiffuse>$PARAM[colordiffuse]</colordiffuse>
			</control>
		</definition>
	</include>
	
	<!-- <variable name=""> -->
	<!-- comon $INFO[Skin.String(BackgroundOverlayTexture)] -->
	<!-- home $INFO[Skin.String(BackgroundOverlayTextureHome)] -->
	<!-- </variable> -->
	
	<include name="Rotating_ExtraFanartBackground">
		<control type="fadelabel" id="99007">
			<!-- common visibility conditions -->
			<visible>
                [Window.IsActive(DialogVideoInfo.xml)] |
                [Container.Content(Genres) + Skin.String(moviegenrefanart.path) + !String.IsEmpty(ListItem.label) + !String.IsEqual(ListItem.label,..)] | 
                [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(musicvideos) | Container.Content(albums) | Container.Content(songs) | Container.Content(artists)]
            </visible>
			<!-- additional visibility conditions -->
			<include condition="Window.IsMedia">disabledExtraFanart</include>
			<!-- common movie,show,artists -->
			<info>Container.ListItem.Art(fanart)</info>
			<info>Container.ListItem.Art(fanart1)</info>
			<info>Container.ListItem.Art(fanart2)</info>
			<info>Container.ListItem.Art(fanart3)</info>
			<info>Container.ListItem.Art(fanart4)</info>
			<info>Container.ListItem.Art(fanart5)</info>
			<info>Container.ListItem.Art(fanart6)</info>
			<info>Container.ListItem.Art(fanart7)</info>
			<info>Container.ListItem.Art(fanart8)</info>
			<info>Container.ListItem.Art(fanart9)</info>
			<info>Container.ListItem.Art(fanart10)</info>
			<info>Container.ListItem.Art(fanart11)</info>
			<info>Container.ListItem.Art(fanart12)</info>
			<info>Container.ListItem.Art(fanart13)</info>
			<info>Container.ListItem.Art(fanart14)</info>
			<info>Container.ListItem.Art(fanart15)</info>
			<info>Container.ListItem.Art(fanart16)</info>
			<info>Container.ListItem.Art(fanart17)</info>
			<info>Container.ListItem.Art(fanart18)</info>
			<info>Container.ListItem.Art(fanart19)</info>
			<info>Container.ListItem.Art(fanart20)</info>
			<!-- tvshow for seasons,episodes -->
			<info>Container.ListItem.Art(tvshow.fanart)</info>
			<info>Container.ListItem.Art(tvshow.fanart1)</info>
			<info>Container.ListItem.Art(tvshow.fanart2)</info>
			<info>Container.ListItem.Art(tvshow.fanart3)</info>
			<info>Container.ListItem.Art(tvshow.fanart4)</info>
			<info>Container.ListItem.Art(tvshow.fanart5)</info>
			<info>Container.ListItem.Art(tvshow.fanart6)</info>
			<info>Container.ListItem.Art(tvshow.fanart7)</info>
			<info>Container.ListItem.Art(tvshow.fanart8)</info>
			<info>Container.ListItem.Art(tvshow.fanart9)</info>
			<info>Container.ListItem.Art(tvshow.fanart10)</info>
			<info>Container.ListItem.Art(tvshow.fanart11)</info>
			<info>Container.ListItem.Art(tvshow.fanart12)</info>
			<info>Container.ListItem.Art(tvshow.fanart13)</info>
			<info>Container.ListItem.Art(tvshow.fanart14)</info>
			<info>Container.ListItem.Art(tvshow.fanart15)</info>
			<info>Container.ListItem.Art(tvshow.fanart16)</info>
			<info>Container.ListItem.Art(tvshow.fanart17)</info>
			<info>Container.ListItem.Art(tvshow.fanart18)</info>
			<info>Container.ListItem.Art(tvshow.fanart19)</info>
			<info>Container.ListItem.Art(tvshow.fanart20)</info>
			<!-- set -->
			<!-- <info>Container.ListItem.Art(set.fanart)</info>
			<info>Container.ListItem.Art(set.fanart1)</info>
			<info>Container.ListItem.Art(set.fanart2)</info>
			<info>Container.ListItem.Art(set.fanart3)</info>
			<info>Container.ListItem.Art(set.fanart4)</info>
			<info>Container.ListItem.Art(set.fanart5)</info>
			<info>Container.ListItem.Art(set.fanart6)</info>
			<info>Container.ListItem.Art(set.fanart7)</info>
			<info>Container.ListItem.Art(set.fanart8)</info>
			<info>Container.ListItem.Art(set.fanart9)</info>
			<info>Container.ListItem.Art(set.fanart10)</info>
			<info>Container.ListItem.Art(set.fanart11)</info>
			<info>Container.ListItem.Art(set.fanart12)</info>
			<info>Container.ListItem.Art(set.fanart13)</info>
			<info>Container.ListItem.Art(set.fanart14)</info>
			<info>Container.ListItem.Art(set.fanart15)</info>
			<info>Container.ListItem.Art(set.fanart16)</info>
			<info>Container.ListItem.Art(set.fanart17)</info>
			<info>Container.ListItem.Art(set.fanart18)</info>
			<info>Container.ListItem.Art(set.fanart19)</info>
			<info>Container.ListItem.Art(set.fanart20)</info> -->
			<!-- artistfanart for album , song, musicvideos -->
			<info>Container.ListItem.Art(artist.fanart)</info>
			<info>Container.ListItem.Art(artist.fanart1)</info>
			<info>Container.ListItem.Art(artist.fanart2)</info>
			<info>Container.ListItem.Art(artist.fanart3)</info>
			<info>Container.ListItem.Art(artist.fanart4)</info>
			<info>Container.ListItem.Art(artist.fanart5)</info>
			<info>Container.ListItem.Art(artist.fanart6)</info>
			<info>Container.ListItem.Art(artist.fanart7)</info>
			<info>Container.ListItem.Art(artist.fanart8)</info>
			<info>Container.ListItem.Art(artist.fanart9)</info>
			<info>Container.ListItem.Art(artist.fanart10)</info>
			<info>Container.ListItem.Art(artist.fanart11)</info>
			<info>Container.ListItem.Art(artist.fanart12)</info>
			<info>Container.ListItem.Art(artist.fanart13)</info>
			<info>Container.ListItem.Art(artist.fanart14)</info>
			<info>Container.ListItem.Art(artist.fanart15)</info>
			<info>Container.ListItem.Art(artist.fanart16)</info>
			<info>Container.ListItem.Art(artist.fanart17)</info>
			<info>Container.ListItem.Art(artist.fanart18)</info>
			<info>Container.ListItem.Art(artist.fanart19)</info>
			<info>Container.ListItem.Art(artist.fanart20)</info>
			<randomize>true</randomize>
			<pauseatend>5000</pauseatend>
			<scroll>false</scroll>
			<scrollout>false</scrollout>
		</control>
	</include>

	<variable name="FanartBackground">
		 <!-- genre fanart -->
		<value condition="Container.Content(Genres) + Skin.String(moviegenrefanart.path) + !String.IsEmpty(ListItem.label) + !String.IsEqual(ListItem.label,..)">$INFO[Skin.String(moviegenrefanartpath)]/$INFO[ListItem.Label].jpg</value>
		<!-- normal fanart backgrounds -->
		<value condition="!String.IsEmpty(ListItem.PicturePath)">$INFO[ListItem.PicturePath]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(albumartist.fanart))">$INFO[Container.Art(albumartist.fanart)]</value>
	</variable>

	<variable name="backgroundVar">
		<!-- <value condition="[Window.IsActive(LoginScreen.xml) | Window.IsActive(StartUp.xml)] + Skin.String(LoginBackground)">$INFO[Skin.String(LoginBackground)]</value> -->
		<!-- ANIMATED FANART -->
		<value condition="!String.IsEmpty(ListItem.Art(Animatedfanart)) + Skin.HasSetting(AnimatedFanart)">$INFO[ListItem.Art(AnimatedFanart)]</value>
		<value condition="Control.IsVisible(99007)">$INFO[Control.GetLabel(99007)]</value>
		<value condition="Control.IsVisible(99006) + !String.IsEmpty(Control.GetLabel(99006))">$INFO[Control.GetLabel(99006)]</value>
		<!-- weather fanart -->
		<value condition="Window.IsActive(MyWeather.xml)">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.fanartCode)]$INFO[Skin.String(WeatherFanArtPack.ext)]</value>
		<value condition="Skin.String(BackgroundTexture)">$INFO[Skin.String(BackgroundTexture)]</value>
		<value>special://skin/extras/backgroundimages/pattern1.jpg</value>
	</variable>
	
	
	
	<variable name="HeaderBarTexture">
		<value condition="!String.IsEmpty(Skin.String(HeaderBarTexture))">$INFO[Skin.String(HeaderBarTexture)]</value>
		<value>colors/white.png</value>
	</variable>
</includes>