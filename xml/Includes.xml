<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- Files -->
	<include file="Defaults.xml" />
	
	<include file="SkinSwan_DebugOverlay.xml" />
	<include file="SkinSwan_Animations.xml" />
	
	<include file="SkinSwan_VideoInfo.xml" />
	
	<include file="include_embuaryinfo_person.xml" />
	
	<include file="SkinSwan_BackgroundBuilding.xml" />
	
	<include file="SkinName_Home.xml" />
		
	<include file="Includes_Layouts.xml" />
	<include file="SkinSwan_Menucontrol.xml" />
	<include file="SkinSwan_WidgetShortcuts.xml" />
	
	<include file="SkinName_View50.xml" />
	<include file="SkinName_Views_SimplePanels.xml" />
	<include file="SkinName_View58.xml" />
	
	<include file="IncludesCustomSearch.xml" />
	
	<include file="_SkinName_MoveCode.xml" />
	<include file="SkinName_Include_Skinsettings.xml" />
	<include file="Includes_fonts.xml" />
	
	<include file="SkinName_EXP.xml" />
	
	<include file="SkinName_HUBs.xml" />
	<include file="SkinName_Widgets.xml" />
	<include file="SkinName_ContainerLayouts.xml" />
	
	<include file="SkinName_Variables.xml" />


<!-- constants stereoscopcic estuary -->
	<constant name="DepthDialog">0.50</constant>
	<constant name="DepthDialog+">0.52</constant>
	<constant name="DepthDialog-">0.48</constant>
	<constant name="DepthMax">0.54</constant>
	<constant name="DepthOSD">0.40</constant>
	<constant name="DepthOSD+">0.44</constant>
	<constant name="DepthContentPopout">0.10</constant>
	<constant name="DepthContentPanel">0.05</constant>
	<constant name="DepthBars">0.12</constant>
	<constant name="DepthBackground">-0.80</constant>
	<constant name="DepthBackground2">-0.78</constant>
	<constant name="DepthSideBlade">0.10</constant>
	
	
	<constant name="bg_alpha">79</constant>
	<constant name="dialogbuttons_itemgap">-20</constant>
	<constant name="list_y_offset">0</constant>
	<constant name="list_item_height">80</constant>
	
	<variable name="EmbuaryHelper_GetInfo_dbid">
		<value condition="ListItem.IsParentFolder + String.IsEqual(ListItemAbsolute(1).DBType,movie) + Integer.IsGreater(ListItemAbsolute(1).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItemAbsolute(1).DBID]&amp;type=movie&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="ListItem.IsParentFolder + String.IsEqual(ListItemAbsolute(1).DBType,tvshow) + Integer.IsGreater(ListItemAbsolute(1).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItemAbsolute(1).DBID]&amp;type=tvshow&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="ListItem.IsParentFolder + String.IsEqual(ListItemAbsolute(1).DBType,season) + Integer.IsGreater(ListItemAbsolute(1).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItemAbsolute(1).DBID]&amp;type=tvshow&amp;idtype=season&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="ListItem.IsParentFolder + String.IsEqual(ListItemAbsolute(1).DBType,season) + Integer.IsGreater(ListItemAbsolute(1).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItemAbsolute(1).DBID]&amp;type=tvshow&amp;idtype=season&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="!Container.HasParent + String.IsEqual(ListItem.Label,$LOCALIZE[20366]) + String.IsEqual(ListItemAbsolute(1).DBType,season) + Integer.IsGreater(ListItemAbsolute(1).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItemAbsolute(1).DBID]&amp;type=tvshow&amp;idtype=season&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="Container.HasParent + String.IsEqual(ListItem.Label,$LOCALIZE[20366]) + String.IsEqual(ListItemAbsolute(2).DBType,season) + Integer.IsGreater(ListItemAbsolute(2).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItemAbsolute(2).DBID]&amp;type=tvshow&amp;idtype=season&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="ListItem.IsParentFolder + String.IsEqual(ListItemAbsolute(1).DBType,episode) + Integer.IsGreater(ListItemAbsolute(1).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItem.DBID]&amp;type=tvshow&amp;idtype=episode&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie) + Integer.IsGreater(ListItem.DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItem.DBID]&amp;type=movie&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow) + Integer.IsGreater(ListItem.DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItem.DBID]&amp;type=tvshow&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.IsEqual(ListItem.DBType,season) + Integer.IsGreater(ListItem.DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItem.DBID]&amp;type=tvshow&amp;idtype=season&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.IsEqual(ListItem.DBType,episode) + Integer.IsGreater(ListItem.DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItem.DBID]&amp;type=tvshow&amp;idtype=episode&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>-</value>
	</variable>
	
	<!-- may not needed -->
	<variable name="EmbuaryHelper_NextUp">
		<value condition="Container.Content(seasons) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + !String.IsEmpty(ListItemAbsolute(0).Property(series_id))">plugin://plugin.video.embycon/?mode=GET_CONTENT&amp;use_cache=false&amp;media_type=Episodes&amp;url=%7Bserver%7D%2Femby%2FShows%2FNextUp%3FSeriesId%3D$INFO[ListItemAbsolute(0).Property(series_id)]%26UserId%3D%7Buserid%7D%26IsVirtualUnAired%3Dfalse%26IsMissing%3Dfalse%26Fields%3D%7Bfield_filters%7D%26format%3Djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="Container.Content(seasons) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + !String.IsEmpty(ListItemAbsolute(1).Property(series_id))">plugin://plugin.video.embycon/?mode=GET_CONTENT&amp;use_cache=false&amp;media_type=Episodes&amp;url=%7Bserver%7D%2Femby%2FShows%2FNextUp%3FSeriesId%3D$INFO[ListItemAbsolute(1).Property(series_id)]%26UserId%3D%7Buserid%7D%26IsVirtualUnAired%3Dfalse%26IsMissing%3Dfalse%26Fields%3D%7Bfield_filters%7D%26format%3Djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="Container.Content(seasons) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + !String.IsEmpty(ListItemAbsolute(2).Property(series_id))">plugin://plugin.video.embycon/?mode=GET_CONTENT&amp;use_cache=false&amp;media_type=Episodes&amp;url=%7Bserver%7D%2Femby%2FShows%2FNextUp%3FSeriesId%3D$INFO[ListItemAbsolute(2).Property(series_id)]%26UserId%3D%7Buserid%7D%26IsVirtualUnAired%3Dfalse%26IsMissing%3Dfalse%26Fields%3D%7Bfield_filters%7D%26format%3Djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="Container.Content(seasons) + Integer.IsGreater(Container(2000).ListItem.Property(watchedepisodes),0) + Integer.IsGreater(Container(2000).ListItem.Property(unwatchedepisodes),0) + Integer.IsGreater(Container(2000).ListItem.DBID,0)">videodb://inprogresstvshows/$INFO[Container(2000).ListItem.DBID]/-2/?tvshowid=$INFO[Container(2000).ListItem.DBID]</value>
		<value>-</value>
	</variable>
	
	<include name="NativeString_Filter">
		<control type="edit" id="19">
			<visible>!$EXP[Infodialog_IsActive]</visible>
			<visible>!Control.IsVisible(58)</visible>
			<visible>String.IsEmpty(Window(home).Property(SetShortcutInProgress))</visible>
			<description>default menucontrol as option ?, add container based on vis ?</description>
			<onup>50</onup>
			<ondown>50</ondown>
			
			<top>15</top>
			<left>60</left>
			<height>60</height>
			<width>400</width>
			<hinttext>$LOCALIZE[19140]</hinttext>
			<texturefocus diffuse="buttons/button_6to1_Trans.png">colors/white50.png</texturefocus>	
			<texturenofocus diffuse="buttons/button_6to1_Trans.png">colors/white10.png</texturenofocus>
			<font>SearchControl</font>
			<textoffsetx>20</textoffsetx>
			<textoffsety>15</textoffsety>
			<textcolor>grey</textcolor>
			<focusedcolor>black</focusedcolor>
			<disabledcolor />
			<invalidcolor />
			<aligny>center</aligny>
			<pulseonselect>no</pulseonselect>
			<label />
		</control>
	</include>
	
	<include name="SetPropOnFocus_HiddenButton">
		<control type="button">
			<visible allowhiddenfocus="true">false</visible>
			<onfocus condition="[String.IsEqual(ListItem.DBtype,tvshow) | String.IsEqual(ListItem.DBtype,movie)]">RunScript(script.embuary.helper,action=lookforfile,file='"$INFO[listitem.path]$INFO[listitem.FolderName,,-trailer.mp4]"',prop=trailer_avail)</onfocus>
			
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.dbid)">SetProperty(dbid,$INFO[listitem.dbid],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.rating)">SetProperty(rating,$INFO[listitem.rating],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + [string.IsEmpty(listitem.rating) + !string.IsEmpty(listitem.userrating)]">SetProperty(rating,$INFO[listitem.userrating],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.Property(totalseasons))">SetProperty(totalseasons,$INFO[listitem.Property(totalseasons)],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.Property(totalepisodes))">SetProperty(totalepisodes,$INFO[listitem.Property(totalepisodes)],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.status)">SetProperty(status,$INFO[listitem.status],home)</onfocus>
		
			<onunfocus condition="!String.IsEmpty(Window(home).Property(trailer_avail))">ClearProperty(trailer_avail,home)</onunfocus>
			
			
		</control>
	</include>
	
	<!-- Layout Positioning -->
	<include name="height">
		<height>$PARAM[height]</height>
	</include>
	
	<include name="width">
		<width>$PARAM[width]</width>
	</include>
	
	<include name="pos_left">
		<param name="left" default="0" />
		<definition>
			<left>$PARAM[left]</left>
		</definition>
	</include>
	
	<include name="pos_right">
		<param name="right" default="0" />
		<definition>
			<right>$PARAM[right]</right>
		</definition>
	</include>
	
	<include name="pos_alignx">
		<param name="align" default="left" />
		<definition>
			<align>$PARAM[align]</align>
		</definition>
	</include>
	<include name="pos_top">
		<top>$PARAM[top]</top>
	</include>
	
	<include name="bg_gradientmulticolor">
		<param name="layer1_top" default="PanelGradient1_HUB" />
		<param name="layer1_bottom" default="PanelGradient2_HUB" />
		<param name="layer2" default="PanelGradient3_HUB" />
		<definition>
			<control type="image">
				<texture flipy="true" colordiffuse="$VAR[PanelGradient2_HUB]">hub/diffuse_linear_vert_50_trans.png</texture>
				<bordertexture colordiffuse="$VAR[PanelGradient1_HUB]">hub/diffuse_linear_vert.png</bordertexture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<texture colordiffuse="$VAR[PanelGradient3_HUB]" flipy="true">hub/diffuse_linear_vert_50_trans.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
		</definition>
	</include>
	
	<include name="inc_alignment">
		<include content="pos_align_$PARAM[align]">
			<param name="value" value="$PARAM[offset]" />
		</include>
	</include>

	<include name="DefaultDialogButton">
		<param name="width">300</param>
		<param name="height">100</param>
		<param name="wrapmultiline">false</param>
		<param name="font">font25_title</param>
		<param name="visible">true</param>
		<definition>
			<control type="button" id="$PARAM[id]">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<label>$PARAM[label]</label>
				<font>$PARAM[font]</font>
				<textoffsetx>30</textoffsetx>
				<wrapmultiline>$PARAM[wrapmultiline]</wrapmultiline>
				<align>center</align>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>
	
	<include name="HiddenObject">
		<left>-3000</left>
		<top>-3000</top>
		<width>1</width>
		<height>1</height>
		<texturefocus />
		<texturenofocus />
		<label/>
		<font/>
	</include>
	
	<include name="HiddenContainer">
		<left>-3000</left>
		<top>-3000</top>
		<width>1</width>
		<height>1</height>
		<texturefocus />
		<texturenofocus />
		<label/>
		<font/>
		<itemlayout/>
		<focusedlayout/>
	</include>
	
	<include name="FullScreenDimensions">
		<width>100%</width>
		<height>100%</height>
	</include>
	
	<include name="HiddenMenuControl">
		<param name="container" default="9000" />
		<definition>
			<control type="button" id="$PARAM[menucontrol]">
				<include>HiddenObject</include>
				<onfocus>$PARAM[action1]</onfocus>
			</control>
		</definition>
	</include>

	<include name="spacer_h">
		<param name="id" />
		<param name="gap" default="30" />
		<param name="visible" default="true" />
		<definition>
			<control type="label" id="$PARAM[id]">
				<visible>$PARAM[visible]</visible>
				<height>$PARAM[gap]</height>
				<font />
				<textcolor />
			</control>
		</definition>
	</include>
	
	
	<include name="VideoInfo_InfoList">
		<control type="group">
			<width>1000</width>
			<height>40</height>
			<top>0</top>
			<left>10</left>
			<visible>$PARAM[visible]</visible>
			<control type="label">
				<left>-10</left>
				<width>250</width>
				<height>40</height>
				<font>Reg33</font>
				<aligny>center</aligny>
				<align>right</align>
				<textcolor>cyan</textcolor>
				<label>$PARAM[Info]</label>
			</control>
			<control type="image">
				<left>250</left>
				<width>40</width>
				<height>40</height>
				<colordiffuse>white</colordiffuse>
				<texture>$PARAM[icon]</texture>
			</control>
			<control type="label">
				<left>300</left>
				<width>730</width>
				<height>40</height>
				<font>Reg33</font>
				<aligny>center</aligny>
				<align>left</align>
				<textcolor>white</textcolor>
				<label>$PARAM[InfoLabel]</label>
			</control>
		</control>
       
    </include>
	<include name="VideoInfo_InfoList_AV_Flags">
		<control type="group">
			<width>1000</width>
			<height>40</height>
			<top>0</top>
			<left>10</left>
			<visible>$PARAM[visible]</visible>
			<control type="label">
				<left>-10</left>
				<width>250</width>
				<height>40</height>
				<font>Reg33</font>
				<aligny>center</aligny>
				<align>right</align>
				<textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
				<label>$PARAM[Info]</label>
			</control>
			<control type="image">
				<left>255</left>
				<top>5</top>
				<width>35</width>
				<height>35</height>
				<colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
				<texture>$PARAM[icon]</texture>
			</control>
			<control type="grouplist">
				<top>3</top>
				<left>300</left>
				<width>160</width>
				<usecontrolcoords>true</usecontrolcoords>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				
				<control type="image">	
					<width>40</width>
					<height>40</height>
					<colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
					<texture>$INFO[ListItem.$PARAM[InfoLabelProperty],resource://resource.images.languageflags.colour/,.png]</texture>
					<visible>!String.IsEmpty(ListItem.$PARAM[InfoLabelProperty]) | !String.IsEmpty(ListItem.Property($PARAM[InfoLabelProperty].1))</visible>
				</control>
				<control type="image">
					<width>40</width>
					<height>40</height>
					<colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
					<texture>$INFO[ListItem.Property($PARAM[InfoLabelProperty].2),resource://resource.images.languageflags.colour/,.png]</texture>
					<visible>!String.IsEmpty(ListItem.Property($PARAM[InfoLabelProperty].2))</visible>
				</control>
				<control type="image">
					<width>40</width>
					<height>40</height>
					<colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
					<texture>$INFO[ListItem.Property($PARAM[InfoLabelProperty].3),resource://resource.images.languageflags.colour/,.png]</texture>
					<visible>!String.IsEmpty(ListItem.Property($PARAM[InfoLabelProperty].3))</visible>
				</control>
			</control>
		</control>
	</include>
	
	<!-- <include name="RatingCircle">
		<param name="animation">False</param>
		<definition>
			<control type="group">
				<animation effect="fade" time="0" condition="$PARAM[animation]">VisibleChange</animation>
				<include content="UserRatingContent" condition="Skin.HasSetting(circle_userrating)">
					<param name="infolabel" value="ListItem.UserRating" />
				</include>
				<include content="UserRatingContent" condition="Skin.HasSetting(circle_rating)">
					<param name="infolabel" value="ListItem.Rating" />
				</include>
			</control>
		</definition>
	</include> -->
	
	
	
	<!-- estuary media flags
	<include name="InfoFlag">
		<control type="group">
			<width>180</width>
			<visible>$PARAM[visible]</visible>
			<control type="image">
				<top>-3</top>
				<left>0</left>
				<width>40</width>
				<height>40</height>
				<texture colordiffuse="white">$PARAM[icon]</texture>
			</control>
			<control type="label">
				<left>50</left>
				<width>180</width>
				<height>35</height>
				<aligny>center</aligny>
				<font>font12</font>
				<label>$PARAM[label]</label>
			</control>
		</control>
	</include>
	<include name="MediaFlag">
		<param name="width">115</param>
		<param name="height">60</param>
		<param name="visible">true</param>
		<definition>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<fadetime>0</fadetime>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture>$PARAM[texture]</texture>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>
	
	 -->
	<!-- <include name="MediaFlags">
		<param name="infolabel_prefix"></param>
		<param name="resolution_var">$VAR[ResolutionFlagVar]</param>
		<definition>
			<control type="grouplist">
				<orientation>horizontal</orientation>
				<right>20</right>
				<top>0</top>
				<height>70</height>
				<align>right</align>
				<itemgap>28</itemgap>
				<width>1900</width>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="group">
					<width>150</width>
					<visible>System.HasAddon(resource.images.studios.white) + String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,tvshow)</visible>
					<include content="MediaFlag">
						<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.Studio,resource://resource.images.studios.white/,.png]" />
					</include>
				</control>
				<control type="group">
					<top>10</top>
					<width>200</width>
					<include content="InfoFlag">
						<param name="visible" value="[String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,tvshow) | String.IsEqual($PARAM[infolabel_prefix]ListItem.DBtype,episode)] + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Premiered)" />
						<param name="icon" value="lists/year.png" />
						<param name="label" value="$INFO[$PARAM[infolabel_prefix]ListItem.Premiered]" />
					</include>
				</control>
				<control type="group">
					<width>115</width>
					<visible>!String.IsEmpty($PARAM[infolabel_prefix]ListItem.Duration)</visible>
					<control type="label">
						<width>115</width>
						<height>60</height>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[$PARAM[infolabel_prefix]ListItem.Duration]</label>
						<font>font_flag</font>
					</control>
					<include content="MediaFlag">
						<param name="texture" value="flags/flag.png" />
					</include>
				</control>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.AudioChannels,flags/audiochannel/,.png]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.AudioChannels)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.AudioCodec,flags/audiocodec/,.png]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.AudioCodec)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[ListItem.VideoAspect,flags/aspectratio/,.png]" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$PARAM[resolution_var]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.VideoResolution)" />
				</include>
			</control>
		</definition>
	</include> -->
	
	<!-- <include name="WeatherIcon">
		<control type="group">
			<width>268</width>
			<visible>!String.IsEmpty($PARAM[label])</visible>
			<control type="image">
				<left>50</left>
				<width>60</width>
				<height>60</height>
				<texture colordiffuse="D0FFFFFF">$PARAM[texture]</texture>
			</control>
			<control type="textbox">
				<top>68</top>
				<width>160</width>
				<height>63</height>
				<font>font25_narrow</font>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[$PARAM[label]]</label>
			</control>
		</control>
	</include> -->
	
		
	<!-- <include name="UpDownArrows">
		<param name="up_posy">134</param>
		<param name="down_posy">910</param>
		<param name="posx">936</param>
		<param name="visible">true</param>
		<definition>
			<control type="button" id="$PARAM[container_id]588">
				<left>$PARAM[posx]</left>
				<top>$PARAM[down_posy]</top>
				<width>48</width>
				<height>24</height>
				<texturefocus colordiffuse="Button_Panel_FO">overlays/arrowdown.png</texturefocus>
				<texturenofocus colordiffuse="Button_Panel_FO">overlays/arrowdown.png</texturenofocus>
				<animation effect="zoom" start="100,0" end="100,100" center="auto" time="200" delay="10">VisibleChange</animation>
				<animation effect="zoom" start="100,0" end="100,100" delay="500" center="auto" time="200">WindowOpen</animation>
				<animation effect="zoom" start="100,100" end="100,0" center="auto" time="200">WindowClose</animation>
				<onclick>SetFocus($PARAM[container_id])</onclick>
				<onclick>PageDown</onclick>
				<visible>Container($PARAM[container_id]).HasNext + Control.IsVisible($PARAM[container_id])</visible>
				<visible>$PARAM[visible]</visible>
			</control>
			<control type="button" id="$PARAM[container_id]589">
				<left>$PARAM[posx]</left>
				<top>$PARAM[up_posy]</top>
				<width>48</width>
				<height>24</height>
				<texturefocus colordiffuse="Button_Panel_FO" flipy="true">overlays/arrowdown.png</texturefocus>
				<texturenofocus colordiffuse="Button_Panel_FO" flipy="true">overlays/arrowdown.png</texturenofocus>
				<animation effect="zoom" start="100,0" end="100,100" center="auto" time="200" delay="10">VisibleChange</animation>
				<animation effect="zoom" start="100,0" end="100,100" delay="500" center="auto" time="200">WindowOpen</animation>
				<animation effect="zoom" start="100,100" end="100,0" center="auto" time="200">WindowClose</animation>
				<onclick>SetFocus($PARAM[container_id])</onclick>
				<onclick>PageUp</onclick>
				<visible>Container($PARAM[container_id]).HasPrevious + Control.IsVisible($PARAM[container_id])</visible>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include> -->
	
	<!-- 
	<include name="DialogBackgroundCommons">
		<control type="image">
			<left>-2000</left>
			<top>-2000</top>
			<width>6000</width>
			<height>6000</height>
			<animation effect="fade" time="300">VisibleChange</animation>
			<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
			<texture colordiffuse="C2FFFFFF">colors/black.png</texture>
			<visible>$PARAM[darken_bg]</visible>
		</control>
		<control type="button">
			<left>-2000</left>
			<top>-2000</top>
			<width>6000</width>
			<height>6000</height>
			<texturefocus />
			<texturenofocus />
			<onclick>Action(close)</onclick>
		</control>
		<control type="group">
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<right>0</right>
				<bottom>0</bottom>
				<texture colordiffuse="dialog_tint">colors/white.png</texture>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<right>0</right>
				<height>70</height>
				<texture colordiffuse="Button_Panel_FO" border="2">colors/white70.png</texture>
			</control>
			<control type="label" id="$PARAM[header_id]">
				<left>40</left>
				<top>0</top>
				<right>100</right>
				<height>70</height>
				<font>font32_title</font>
				<label>$PARAM[header_label]</label>
				<aligny>center</aligny>
				<shadowcolor>black</shadowcolor>
			</control>
			<control type="button" id="22002">
				<description>button overlay to avoid closing in dialog area</description>
				<left>0</left>
				<top>0</top>
				<right>0</right>
				<bottom>0</bottom>
				<texturefocus />
				<texturenofocus />
				<onclick>noop</onclick>
			</control>
			<control type="radiobutton">
				<right>10</right>
				<top>11</top>
				<width>48</width>
				<height>48</height>
				<radiowidth>48</radiowidth>
				<radioheight>48</radioheight>
				<texturefocus />
				<texturenofocus />
				<label></label>
				<textureradioofffocus colordiffuse="EEFFFFFF">dialogs/close.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="EEFFFFFF">icons/logo.png</textureradiooffnofocus>
				<textureradioonfocus colordiffuse="EEFFFFFF">dialogs/close.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="EEFFFFFF">icons/logo.png</textureradioonnofocus>
				<onclick>Action(close)</onclick>
				<visible>!Skin.HasSetting(touchmode)</visible>
			</control>
			<control type="button">
				<right>10</right>
				<top>11</top>
				<width>48</width>
				<height>48</height>
				<texturefocus>dialogs/close.png</texturefocus>
				<texturenofocus>dialogs/close.png</texturenofocus>
				<onclick>Action(close)</onclick>
				<visible>Skin.HasSetting(touchmode)</visible>
			</control>
		</control>
	</include> -->
	
	<!-- estuary top bar -->
	<!-- <include name="TopBar">
		<param name="sublabel">$INFO[Container.SortMethod,$LOCALIZE[31022]: ,  ∙  ]$INFO[Container.CurrentItem,, / ]$INFO[Container.NumItems]</param>
		<definition>
			<control type="group">
				<animation effect="slide" end="0,-112" time="300" tween="sine" easing="inout" condition="$EXP[Infodialog_IsActive]">conditional</animation>
				<depth>DepthBars</depth>
				<animation effect="fade" start="0" end="100" time="300" condition="[Window.Previous(fullscreenvideo) | Window.Previous(startup)] + !Window.IsVisible(1109)">WindowOpen</animation>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>110%</width>
					<height>130</height>
					<texture>frame/InfoBar.png</texture>
					<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(screencalibration)">WindowClose</animation>
				</control>
				<control type="grouplist">
					<left>35</left>
					<description>Left side of top bar</description>
					<width>900</width>
					<top>-7</top>
					<height>100</height>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
					<animation effect="slide" end="0,16" time="200" reversible="true" condition="String.IsEmpty(Control.GetLabel(18900))">Conditional</animation>
					<animation effect="slide" end="70,0" time="200" reversible="true" condition="Control.IsVisible(799)">Conditional</animation>
					<control type="label">
						<label>$PARAM[breadcrumbs_label]</label>
						<include>BreadcrumbsLabel</include>
					</control>
					<control type="label">
						<label>$INFO[Container.ShowTitle, / ]</label>
						<include>BreadcrumbsLabel</include>
						<visible>!String.IsEmpty(Container.ShowTitle) + !String.IsEqual(Container.ShowTitle,Container.FolderName)</visible>
					</control>
					<control type="label">
						<label>$INFO[Container.FolderName, / ]</label>
						<include>BreadcrumbsLabel</include>
						<visible>![Container.Content() + Window.IsActive(videos)]</visible>
						<visible>![Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRTimers.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRSearch.xml)]</visible>
					</control>
					<control type="label">
						<label>$INFO[Container.PluginCategory, / ]</label>
						<include>BreadcrumbsLabel</include>
						<visible>!String.isempty(Container.PluginCategory)</visible>
					</control>
					<control type="label">
						<label>$INFO[Control.GetLabel(10),: ]</label>
						<include>BreadcrumbsLabel</include>
						<visible>!String.IsEqual(Control.GetLabel(10),$LOCALIZE[16100]) + Window.IsActive(videos)</visible>
					</control>
					<control type="label">
						<left>10</left>
						<label>($LOCALIZE[31052])</label>
						<include>BreadcrumbsLabel</include>
						<visible>Container.Filtered</visible>
					</control>
				</control>
				<control type="button">
					<top>0</top>
					<width>200</width>
					<height>100</height>
					<label></label>
					<onclick>Action(Back)</onclick>
					<visible>!Window.IsActive(home)</visible>
					<texturefocus />
					<texturenofocus />
				</control>
				<control type="label" id="18900">
					<top>50</top>
					<label>$PARAM[sublabel]</label>
					<left>35</left>
					<shadowcolor>text_shadow</shadowcolor>
					<height>100</height>
					<width>900</width>
					<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
					<animation effect="slide" end="70,0" time="200" reversible="true" condition="Control.IsVisible(799)">Conditional</animation>
				</control>
				<control type="grouplist">
					<top>0</top>
					<align>right</align>
					<right>20</right>
					<height>200</height>
					<orientation>horizontal</orientation>
					<width>900</width>
					<itemgap>10</itemgap>
					<visible>!Window.IsVisible(extendedprogressdialog) + !Window.IsActive(fullscreenvideo)</visible>
					<animation effect="fade" time="150">VisibleChange</animation>
					<control type="group">
						<width>600</width>
						<visible>Player.HasMedia + String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))</visible>
						<animation effect="fade" time="200">VisibleChange</animation>
						<control type="grouplist">
							<left>-75</left>
							<orientation>horizontal</orientation>
							<height>38</height>
							<top>14</top>
							<align>right</align>
							<width>660</width>
							<itemgap>5</itemgap>
							<usecontrolcoords>true</usecontrolcoords>
							<control type="image">
								<top>4</top>
								<width>32</width>
								<height>32</height>
								<aspectratio>keep</aspectratio>
								<texture colordiffuse="Button_Panel_FO">$VAR[NowPlayingIconVar]</texture>
							</control>
							<control type="label">
								<label>$INFO[Player.Title]</label>
								<font>font27</font>
								<shadowcolor>text_shadow</shadowcolor>
								<height>35</height>
								<width min="1" max="602">auto</width>
							</control>
						</control>
						<control type="label" id="7700">
							<label>$VAR[NowPlayingSublabelVar]</label>
							<left>-45</left>
							<top>44</top>
							<font>font12</font>
							<textcolor>grey</textcolor>
							<shadowcolor>text_shadow</shadowcolor>
							<height>25</height>
							<width>630</width>
							<align>right</align>
						</control>
					</control>
					<control type="group">
						<visible>Integer.IsGreater(System.ProfileCount,1) + !Player.HasMedia</visible>
						<control type="image">
							<visible>Skin.HasSetting(show_profileavatar)</visible>
							<top>25</top>
							<left>-70</left>
							<width>50</width>
							<height>50</height>
							<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(screencalibration)">WindowClose</animation>
							<texture>$INFO[System.ProfileThumb]</texture>
							<aspectratio>scale</aspectratio>
						</control>
						<control type="label">
							<visible>Skin.HasSetting(show_profilename)</visible>
							<font>font45</font>
							<align>right</align>
							<left>-630</left>
							<shadowcolor>text_shadow</shadowcolor>
							<aligny>center</aligny>
							<height>110</height>
							<width max="600">auto</width>
							<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(screencalibration)">WindowClose</animation>
							<label>$INFO[System.ProfileName]</label>
						</control>
					</control>
					<control type="label">
						<font>font_clock</font>
						<shadowcolor>text_shadow</shadowcolor>
						<height>200</height>
						<width>auto</width>
						<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(screencalibration)">WindowClose</animation>
						<label>$INFO[System.Time]</label>
					</control>
				</control>
				<control type="grouplist">
					<right>10</right>
					<top>70</top>
					<width>800</width>
					<height>100</height>
					<align>right</align>
					<itemgap>5</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="label">
						<height>50</height>
						<width>auto</width>
						<aligny>center</aligny>
						<textoffsetx>-8</textoffsetx>
						<label>$INFO[System.AlarmPos]</label>
						<visible>System.HasAlarm(shutdowntimer)</visible>
					</control>
					<control type="image">
						<top>16</top>
						<width>40</width>
						<height>22</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="left">keep</aspectratio>
						<texture>icons/power.png</texture>
						<visible>System.HasAlarm(shutdowntimer)</visible>
					</control>
					<control type="label">
						<height>50</height>
						<width>auto</width>
						<aligny>center</aligny>
						<label>$INFO[Window(Weather).Property(Current.Temperature)]$INFO[System.TemperatureUnits]</label>
						<visible>Skin.HasSetting(show_weatherinfo) + Weather.IsFetched + ![String.IsEqual(Weather.FanartCode,na)]</visible>
					</control>
					<control type="image">
						<top>1</top>
						<width>50</width>
						<height>50</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="left">keep</aspectratio>
						<texture>$INFO[Weather.FanartCode,weather/small/,.png]</texture>
						<visible>Skin.HasSetting(show_weatherinfo) + Weather.IsFetched + ![String.IsEqual(Weather.FanartCode,na)]</visible>
					</control>
					<control type="image">
						<top>8</top>
						<left>-20</left>
						<width>74</width>
						<height>40</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="center">keep</aspectratio>
						<texture>dialogs/volume/mute.png</texture>
						<visible>Player.Muted</visible>
					</control>
				</control>
				<control type="label" id="23000">
					<top>0</top>
					<left>0</left>
					<label>$INFO[ListItem.SortLetter]</label>
					<font>font_MainMenu</font>
					<width>100%</width>
					<height>80</height>
					<align>center</align>
					<visible>!System.HasActiveModalDialog</visible>
					<visible>Container.Scrolling</visible>
					<visible>!Container.Content(seasons)</visible>
					<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[563])</visible>
					<animation effect="fade" start="0" end="100" time="200" reversible="true">VisibleChange</animation>
					<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
				</control>
			</control>
			<include condition="Skin.HasSetting(touchmode) + !Window.IsActive(home)">TouchBackButton</include>
		</definition>
	</include> -->
	 <variable name="MovieGenreIconVarList">
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.poster/)">resource://resource.images.moviegenreicons.poster/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.coloured/)">resource://resource.images.moviegenreicons.coloured/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.white/)">resource://resource.images.moviegenreicons.white/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.transparent/)">resource://resource.images.moviegenreicons.transparent/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.grey/)">resource://resource.images.moviegenreicons.grey/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.filmstrip/)">resource://resource.images.moviegenreicons.filmstrip/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.arctic.zephyr/)">resource://resource.images.moviegenreicons.arctic.zephyr/$INFO[ListItem.Label].png</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.xzener-flat/)">resource://resource.images.moviegenreicons.xzener-flat/$INFO[ListItem.Label].png</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.xzener-reflection/)">resource://resource.images.moviegenreicons.xzener-reflection/$INFO[ListItem.Label].png</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.arctic.zephyr/)">resource://resource.images.moviegenreicons.arctic.zephyr/$INFO[ListItem.Label].png</value>
       <value condition="Skin.String(MovieGenreIconPack.path)">http://localhost:52307/getvarimage&amp;title=$INFO{Skin.String(MovieGenreIconPack.path)}$INFO[ListItem.Label]$INFO{Skin.String(MovieGenreIconPack.ext)}&amp;fallback=DefaultGenre.png</value>
       <value>DefaultGenre.png</value>
     </variable>
	   <variable name="MusicGenreIconVarList">
       <value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.text/)">resource://resource.images.musicgenreicons.text/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.grey/)">resource://resource.images.musicgenreicons.grey/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.poster/)">resource://resource.images.musicgenreicons.poster/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.coloured/)">resource://resource.images.musicgenreicons.coloured/$INFO[ListItem.Label].jpg</value>
       <!-- last resort: use webservice - will only work for non-texture packed resource addons or manual folders -->
       <value condition="Skin.String(MusicGenreIconPack.path)">http://localhost:52307/getvarimage&amp;title=$INFO{Skin.String(MusicGenreIconPack.path)}$INFO[ListItem.Label]$INFO{Skin.String(MusicGenreIconPack.ext)}&amp;fallback=DefaultGenre.png</value>
       <value>DefaultGenre.png</value>
     </variable>
	
	
	
	<!-- estuary bg example 
	<include name="ColoredBackgroundImages">
		<control type="image">
			<depth>DepthBackground</depth>
			<include>FullScreenDimensions</include>
			<aspectratio>scale</aspectratio>
			<texture colordiffuse="primary_background">special://skin/extras/backgrounds/primary.jpg</texture>
		</control>
		<control type="image">
			<depth>DepthBackground</depth>
			<include>FullScreenDimensions</include>
			<aspectratio>scale</aspectratio>
			<texture colordiffuse="secondary_background" fallback="special://skin/extras/backgrounds/pattern1.jpg">$INFO[Skin.String(background_overlay),special://skin/extras/backgrounds/pattern,.jpg]</texture>
		</control>
	</include>
	-->
	
	
	
</includes>
